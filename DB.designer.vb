'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="UATSwitchPay")>  _
Partial Public Class DBDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertApplication(instance As Application)
    End Sub
  Partial Private Sub UpdateApplication(instance As Application)
    End Sub
  Partial Private Sub DeleteApplication(instance As Application)
    End Sub
  Partial Private Sub InsertSetting(instance As Setting)
    End Sub
  Partial Private Sub UpdateSetting(instance As Setting)
    End Sub
  Partial Private Sub DeleteSetting(instance As Setting)
    End Sub
  Partial Private Sub InsertApplicationFieldValue(instance As ApplicationFieldValue)
    End Sub
  Partial Private Sub UpdateApplicationFieldValue(instance As ApplicationFieldValue)
    End Sub
  Partial Private Sub DeleteApplicationFieldValue(instance As ApplicationFieldValue)
    End Sub
  Partial Private Sub InsertApplicationStat(instance As ApplicationStat)
    End Sub
  Partial Private Sub UpdateApplicationStat(instance As ApplicationStat)
    End Sub
  Partial Private Sub DeleteApplicationStat(instance As ApplicationStat)
    End Sub
  Partial Private Sub InsertAudit(instance As Audit)
    End Sub
  Partial Private Sub UpdateAudit(instance As Audit)
    End Sub
  Partial Private Sub DeleteAudit(instance As Audit)
    End Sub
  Partial Private Sub InsertXDSPreVet(instance As XDSPreVet)
    End Sub
  Partial Private Sub UpdateXDSPreVet(instance As XDSPreVet)
    End Sub
  Partial Private Sub DeleteXDSPreVet(instance As XDSPreVet)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("SwitchPayUATConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Applications() As System.Data.Linq.Table(Of Application)
		Get
			Return Me.GetTable(Of Application)
		End Get
	End Property
	
	Public ReadOnly Property Settings() As System.Data.Linq.Table(Of Setting)
		Get
			Return Me.GetTable(Of Setting)
		End Get
	End Property
	
	Public ReadOnly Property ApplicationFieldValues() As System.Data.Linq.Table(Of ApplicationFieldValue)
		Get
			Return Me.GetTable(Of ApplicationFieldValue)
		End Get
	End Property
	
	Public ReadOnly Property ApplicationStats() As System.Data.Linq.Table(Of ApplicationStat)
		Get
			Return Me.GetTable(Of ApplicationStat)
		End Get
	End Property
	
	Public ReadOnly Property Audits() As System.Data.Linq.Table(Of Audit)
		Get
			Return Me.GetTable(Of Audit)
		End Get
	End Property
	
	Public ReadOnly Property vAdditionalFields() As System.Data.Linq.Table(Of vAdditionalField)
		Get
			Return Me.GetTable(Of vAdditionalField)
		End Get
	End Property
	
	Public ReadOnly Property vWFApps() As System.Data.Linq.Table(Of vWFApp)
		Get
			Return Me.GetTable(Of vWFApp)
		End Get
	End Property
	
	Public ReadOnly Property vApplications() As System.Data.Linq.Table(Of vApplication)
		Get
			Return Me.GetTable(Of vApplication)
		End Get
	End Property
	
	Public ReadOnly Property vHistories() As System.Data.Linq.Table(Of vHistory)
		Get
			Return Me.GetTable(Of vHistory)
		End Get
	End Property
	
	Public ReadOnly Property vPaymentRequests() As System.Data.Linq.Table(Of vPaymentRequest)
		Get
			Return Me.GetTable(Of vPaymentRequest)
		End Get
	End Property
	
	Public ReadOnly Property XDSPreVets() As System.Data.Linq.Table(Of XDSPreVet)
		Get
			Return Me.GetTable(Of XDSPreVet)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.CheckDeal")>  _
	Public Function CheckDeal(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="AID", DbType:="BigInt")> ByVal aID As System.Nullable(Of Long)) As ISingleResult(Of CheckDealResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), aID)
		Return CType(result.ReturnValue,ISingleResult(Of CheckDealResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.UpdateStats")>  _
	Public Function UpdateStats() As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.CreateDebitOrderFile")>  _
	Public Function CreateDebitOrderFile(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DebitDate", DbType:="DateTime")> ByVal debitDate As System.Nullable(Of Date)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), debitDate)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.DeclineDeal")>  _
	Public Function DeclineDeal(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ApplicationID", DbType:="BigInt")> ByVal applicationID As System.Nullable(Of Long), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Reason", DbType:="NVarChar(4000)")> ByVal reason As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), applicationID, reason)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.UpdateStat")>  _
	Public Function UpdateStat(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ID", DbType:="BigInt")> ByVal iD As System.Nullable(Of Long)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), iD)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.fDate", IsComposable:=true)>  _
	Public Function fDate(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ApplicationID", DbType:="BigInt")> ByVal applicationID As System.Nullable(Of Long)) As System.Nullable(Of Date)
		Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), applicationID).ReturnValue,System.Nullable(Of Date))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.fPriority", IsComposable:=true)>  _
	Public Function fPriority(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Minutes", DbType:="Int")> ByVal minutes As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="AuditTypeID", DbType:="BigInt")> ByVal auditTypeID As System.Nullable(Of Long)) As String
		Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), minutes, auditTypeID).ReturnValue,String)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.fMinutes", IsComposable:=true)>  _
	Public Function fMinutes(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ApplicationID", DbType:="BigInt")> ByVal applicationID As System.Nullable(Of Long)) As System.Nullable(Of Integer)
		Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), applicationID).ReturnValue,System.Nullable(Of Integer))
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Application")>  _
Partial Public Class Application
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Long
	
	Private _EnvironmentRepositoryID As System.Nullable(Of Long)
	
	Private _MerchantID As System.Nullable(Of Long)
	
	Private _MerchantTerminalID As System.Nullable(Of Long)
	
	Private _InternalAuditTypeID As System.Nullable(Of Long)
	
	Private _AuditTypeID As System.Nullable(Of Long)
	
	Private _FinancialInstitutionID As System.Nullable(Of Long)
	
	Private _CreditProviderID As System.Nullable(Of Long)
	
	Private _ChannelID As System.Nullable(Of Long)
	
	Private _ProductID As System.Nullable(Of Long)
	
	Private _TerminalTypeID As System.Nullable(Of Long)
	
	Private _Title As String
	
	Private _Reference As String
	
	Private _IDNumber As String
	
	Private _FirstName As String
	
	Private _Surname As String
	
	Private _MobileNumber As String
	
	Private _GrossIncome As System.Nullable(Of Decimal)
	
	Private _NettIncome As System.Nullable(Of Decimal)
	
	Private _FinanceAmount As System.Nullable(Of Decimal)
	
	Private _OfferAmount As System.Nullable(Of Decimal)
	
	Private _Term As System.Nullable(Of Integer)
	
	Private _OfferTerm As System.Nullable(Of Integer)
	
	Private _Installment As System.Nullable(Of Decimal)
	
	Private _OfferInstallment As System.Nullable(Of Decimal)
	
	Private _Rate As System.Nullable(Of Double)
	
	Private _Priority As String
	
	Private _AcceptPIN As String
	
	Private _IsAuthorised As System.Nullable(Of Boolean)
	
	Private _CollectPIN As String
	
	Private _IsCollected As System.Nullable(Of Boolean)
	
	Private _MerchantIdentifier As String
	
	Private _TerminalIdentifier As String
	
	Private _DeclineReason As String
	
	Private _Comments As String
	
	Private _UpdateBy As System.Nullable(Of Long)
	
	Private _CreatedBy As System.Nullable(Of Long)
	
	Private _DateCreated As System.Nullable(Of Date)
	
	Private _DateUpdated As System.Nullable(Of Date)
	
	Private _Test As System.Nullable(Of Boolean)
	
	Private _IsComplete As System.Nullable(Of Boolean)
	
	Private _IsDeclined As System.Nullable(Of Boolean)
	
	Private _IsCancelled As System.Nullable(Of Boolean)
	
	Private _IsExpired As System.Nullable(Of Boolean)
	
	Private _IsArchived As System.Nullable(Of Boolean)
	
	Private _IsDeleted As System.Nullable(Of Boolean)
	
	Private _ApplicationFieldValues As EntitySet(Of ApplicationFieldValue)
	
	Private _ApplicationStat As EntityRef(Of ApplicationStat)
	
	Private _Audits As EntitySet(Of Audit)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Long)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnEnvironmentRepositoryIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnEnvironmentRepositoryIDChanged()
    End Sub
    Partial Private Sub OnMerchantIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnMerchantIDChanged()
    End Sub
    Partial Private Sub OnMerchantTerminalIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnMerchantTerminalIDChanged()
    End Sub
    Partial Private Sub OnInternalAuditTypeIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnInternalAuditTypeIDChanged()
    End Sub
    Partial Private Sub OnAuditTypeIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnAuditTypeIDChanged()
    End Sub
    Partial Private Sub OnFinancialInstitutionIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnFinancialInstitutionIDChanged()
    End Sub
    Partial Private Sub OnCreditProviderIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnCreditProviderIDChanged()
    End Sub
    Partial Private Sub OnChannelIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnChannelIDChanged()
    End Sub
    Partial Private Sub OnProductIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnProductIDChanged()
    End Sub
    Partial Private Sub OnTerminalTypeIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnTerminalTypeIDChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnReferenceChanging(value As String)
    End Sub
    Partial Private Sub OnReferenceChanged()
    End Sub
    Partial Private Sub OnIDNumberChanging(value As String)
    End Sub
    Partial Private Sub OnIDNumberChanged()
    End Sub
    Partial Private Sub OnFirstNameChanging(value As String)
    End Sub
    Partial Private Sub OnFirstNameChanged()
    End Sub
    Partial Private Sub OnSurnameChanging(value As String)
    End Sub
    Partial Private Sub OnSurnameChanged()
    End Sub
    Partial Private Sub OnMobileNumberChanging(value As String)
    End Sub
    Partial Private Sub OnMobileNumberChanged()
    End Sub
    Partial Private Sub OnGrossIncomeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnGrossIncomeChanged()
    End Sub
    Partial Private Sub OnNettIncomeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNettIncomeChanged()
    End Sub
    Partial Private Sub OnFinanceAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnFinanceAmountChanged()
    End Sub
    Partial Private Sub OnOfferAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnOfferAmountChanged()
    End Sub
    Partial Private Sub OnTermChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTermChanged()
    End Sub
    Partial Private Sub OnOfferTermChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOfferTermChanged()
    End Sub
    Partial Private Sub OnInstallmentChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnInstallmentChanged()
    End Sub
    Partial Private Sub OnOfferInstallmentChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnOfferInstallmentChanged()
    End Sub
    Partial Private Sub OnRateChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnRateChanged()
    End Sub
    Partial Private Sub OnPriorityChanging(value As String)
    End Sub
    Partial Private Sub OnPriorityChanged()
    End Sub
    Partial Private Sub OnAcceptPINChanging(value As String)
    End Sub
    Partial Private Sub OnAcceptPINChanged()
    End Sub
    Partial Private Sub OnIsAuthorisedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsAuthorisedChanged()
    End Sub
    Partial Private Sub OnCollectPINChanging(value As String)
    End Sub
    Partial Private Sub OnCollectPINChanged()
    End Sub
    Partial Private Sub OnIsCollectedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsCollectedChanged()
    End Sub
    Partial Private Sub OnMerchantIdentifierChanging(value As String)
    End Sub
    Partial Private Sub OnMerchantIdentifierChanged()
    End Sub
    Partial Private Sub OnTerminalIdentifierChanging(value As String)
    End Sub
    Partial Private Sub OnTerminalIdentifierChanged()
    End Sub
    Partial Private Sub OnDeclineReasonChanging(value As String)
    End Sub
    Partial Private Sub OnDeclineReasonChanged()
    End Sub
    Partial Private Sub OnCommentsChanging(value As String)
    End Sub
    Partial Private Sub OnCommentsChanged()
    End Sub
    Partial Private Sub OnUpdateByChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnUpdateByChanged()
    End Sub
    Partial Private Sub OnCreatedByChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnCreatedByChanged()
    End Sub
    Partial Private Sub OnDateCreatedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateCreatedChanged()
    End Sub
    Partial Private Sub OnDateUpdatedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateUpdatedChanged()
    End Sub
    Partial Private Sub OnTestChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnTestChanged()
    End Sub
    Partial Private Sub OnIsCompleteChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsCompleteChanged()
    End Sub
    Partial Private Sub OnIsDeclinedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsDeclinedChanged()
    End Sub
    Partial Private Sub OnIsCancelledChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsCancelledChanged()
    End Sub
    Partial Private Sub OnIsExpiredChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsExpiredChanged()
    End Sub
    Partial Private Sub OnIsArchivedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsArchivedChanged()
    End Sub
    Partial Private Sub OnIsDeletedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsDeletedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ApplicationFieldValues = New EntitySet(Of ApplicationFieldValue)(AddressOf Me.attach_ApplicationFieldValues, AddressOf Me.detach_ApplicationFieldValues)
		Me._ApplicationStat = CType(Nothing, EntityRef(Of ApplicationStat))
		Me._Audits = New EntitySet(Of Audit)(AddressOf Me.attach_Audits, AddressOf Me.detach_Audits)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Long
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EnvironmentRepositoryID", DbType:="BigInt")>  _
	Public Property EnvironmentRepositoryID() As System.Nullable(Of Long)
		Get
			Return Me._EnvironmentRepositoryID
		End Get
		Set
			If (Me._EnvironmentRepositoryID.Equals(value) = false) Then
				Me.OnEnvironmentRepositoryIDChanging(value)
				Me.SendPropertyChanging
				Me._EnvironmentRepositoryID = value
				Me.SendPropertyChanged("EnvironmentRepositoryID")
				Me.OnEnvironmentRepositoryIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MerchantID", DbType:="BigInt")>  _
	Public Property MerchantID() As System.Nullable(Of Long)
		Get
			Return Me._MerchantID
		End Get
		Set
			If (Me._MerchantID.Equals(value) = false) Then
				Me.OnMerchantIDChanging(value)
				Me.SendPropertyChanging
				Me._MerchantID = value
				Me.SendPropertyChanged("MerchantID")
				Me.OnMerchantIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MerchantTerminalID", DbType:="BigInt")>  _
	Public Property MerchantTerminalID() As System.Nullable(Of Long)
		Get
			Return Me._MerchantTerminalID
		End Get
		Set
			If (Me._MerchantTerminalID.Equals(value) = false) Then
				Me.OnMerchantTerminalIDChanging(value)
				Me.SendPropertyChanging
				Me._MerchantTerminalID = value
				Me.SendPropertyChanged("MerchantTerminalID")
				Me.OnMerchantTerminalIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InternalAuditTypeID", DbType:="BigInt")>  _
	Public Property InternalAuditTypeID() As System.Nullable(Of Long)
		Get
			Return Me._InternalAuditTypeID
		End Get
		Set
			If (Me._InternalAuditTypeID.Equals(value) = false) Then
				Me.OnInternalAuditTypeIDChanging(value)
				Me.SendPropertyChanging
				Me._InternalAuditTypeID = value
				Me.SendPropertyChanged("InternalAuditTypeID")
				Me.OnInternalAuditTypeIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AuditTypeID", DbType:="BigInt")>  _
	Public Property AuditTypeID() As System.Nullable(Of Long)
		Get
			Return Me._AuditTypeID
		End Get
		Set
			If (Me._AuditTypeID.Equals(value) = false) Then
				Me.OnAuditTypeIDChanging(value)
				Me.SendPropertyChanging
				Me._AuditTypeID = value
				Me.SendPropertyChanged("AuditTypeID")
				Me.OnAuditTypeIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FinancialInstitutionID", DbType:="BigInt")>  _
	Public Property FinancialInstitutionID() As System.Nullable(Of Long)
		Get
			Return Me._FinancialInstitutionID
		End Get
		Set
			If (Me._FinancialInstitutionID.Equals(value) = false) Then
				Me.OnFinancialInstitutionIDChanging(value)
				Me.SendPropertyChanging
				Me._FinancialInstitutionID = value
				Me.SendPropertyChanged("FinancialInstitutionID")
				Me.OnFinancialInstitutionIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreditProviderID", DbType:="BigInt")>  _
	Public Property CreditProviderID() As System.Nullable(Of Long)
		Get
			Return Me._CreditProviderID
		End Get
		Set
			If (Me._CreditProviderID.Equals(value) = false) Then
				Me.OnCreditProviderIDChanging(value)
				Me.SendPropertyChanging
				Me._CreditProviderID = value
				Me.SendPropertyChanged("CreditProviderID")
				Me.OnCreditProviderIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChannelID", DbType:="BigInt")>  _
	Public Property ChannelID() As System.Nullable(Of Long)
		Get
			Return Me._ChannelID
		End Get
		Set
			If (Me._ChannelID.Equals(value) = false) Then
				Me.OnChannelIDChanging(value)
				Me.SendPropertyChanging
				Me._ChannelID = value
				Me.SendPropertyChanged("ChannelID")
				Me.OnChannelIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductID", DbType:="BigInt")>  _
	Public Property ProductID() As System.Nullable(Of Long)
		Get
			Return Me._ProductID
		End Get
		Set
			If (Me._ProductID.Equals(value) = false) Then
				Me.OnProductIDChanging(value)
				Me.SendPropertyChanging
				Me._ProductID = value
				Me.SendPropertyChanged("ProductID")
				Me.OnProductIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TerminalTypeID", DbType:="BigInt")>  _
	Public Property TerminalTypeID() As System.Nullable(Of Long)
		Get
			Return Me._TerminalTypeID
		End Get
		Set
			If (Me._TerminalTypeID.Equals(value) = false) Then
				Me.OnTerminalTypeIDChanging(value)
				Me.SendPropertyChanging
				Me._TerminalTypeID = value
				Me.SendPropertyChanged("TerminalTypeID")
				Me.OnTerminalTypeIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(50)")>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me.OnTitleChanging(value)
				Me.SendPropertyChanging
				Me._Title = value
				Me.SendPropertyChanged("Title")
				Me.OnTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Reference", DbType:="NVarChar(50)")>  _
	Public Property Reference() As String
		Get
			Return Me._Reference
		End Get
		Set
			If (String.Equals(Me._Reference, value) = false) Then
				Me.OnReferenceChanging(value)
				Me.SendPropertyChanging
				Me._Reference = value
				Me.SendPropertyChanged("Reference")
				Me.OnReferenceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDNumber", DbType:="NVarChar(50)")>  _
	Public Property IDNumber() As String
		Get
			Return Me._IDNumber
		End Get
		Set
			If (String.Equals(Me._IDNumber, value) = false) Then
				Me.OnIDNumberChanging(value)
				Me.SendPropertyChanging
				Me._IDNumber = value
				Me.SendPropertyChanged("IDNumber")
				Me.OnIDNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FirstName", DbType:="NVarChar(500)")>  _
	Public Property FirstName() As String
		Get
			Return Me._FirstName
		End Get
		Set
			If (String.Equals(Me._FirstName, value) = false) Then
				Me.OnFirstNameChanging(value)
				Me.SendPropertyChanging
				Me._FirstName = value
				Me.SendPropertyChanged("FirstName")
				Me.OnFirstNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Surname", DbType:="NVarChar(500)")>  _
	Public Property Surname() As String
		Get
			Return Me._Surname
		End Get
		Set
			If (String.Equals(Me._Surname, value) = false) Then
				Me.OnSurnameChanging(value)
				Me.SendPropertyChanging
				Me._Surname = value
				Me.SendPropertyChanged("Surname")
				Me.OnSurnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MobileNumber", DbType:="NVarChar(50)")>  _
	Public Property MobileNumber() As String
		Get
			Return Me._MobileNumber
		End Get
		Set
			If (String.Equals(Me._MobileNumber, value) = false) Then
				Me.OnMobileNumberChanging(value)
				Me.SendPropertyChanging
				Me._MobileNumber = value
				Me.SendPropertyChanged("MobileNumber")
				Me.OnMobileNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GrossIncome", DbType:="Money")>  _
	Public Property GrossIncome() As System.Nullable(Of Decimal)
		Get
			Return Me._GrossIncome
		End Get
		Set
			If (Me._GrossIncome.Equals(value) = false) Then
				Me.OnGrossIncomeChanging(value)
				Me.SendPropertyChanging
				Me._GrossIncome = value
				Me.SendPropertyChanged("GrossIncome")
				Me.OnGrossIncomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NettIncome", DbType:="Money")>  _
	Public Property NettIncome() As System.Nullable(Of Decimal)
		Get
			Return Me._NettIncome
		End Get
		Set
			If (Me._NettIncome.Equals(value) = false) Then
				Me.OnNettIncomeChanging(value)
				Me.SendPropertyChanging
				Me._NettIncome = value
				Me.SendPropertyChanged("NettIncome")
				Me.OnNettIncomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FinanceAmount", DbType:="Money")>  _
	Public Property FinanceAmount() As System.Nullable(Of Decimal)
		Get
			Return Me._FinanceAmount
		End Get
		Set
			If (Me._FinanceAmount.Equals(value) = false) Then
				Me.OnFinanceAmountChanging(value)
				Me.SendPropertyChanging
				Me._FinanceAmount = value
				Me.SendPropertyChanged("FinanceAmount")
				Me.OnFinanceAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OfferAmount", DbType:="Money")>  _
	Public Property OfferAmount() As System.Nullable(Of Decimal)
		Get
			Return Me._OfferAmount
		End Get
		Set
			If (Me._OfferAmount.Equals(value) = false) Then
				Me.OnOfferAmountChanging(value)
				Me.SendPropertyChanging
				Me._OfferAmount = value
				Me.SendPropertyChanged("OfferAmount")
				Me.OnOfferAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Term", DbType:="Int")>  _
	Public Property Term() As System.Nullable(Of Integer)
		Get
			Return Me._Term
		End Get
		Set
			If (Me._Term.Equals(value) = false) Then
				Me.OnTermChanging(value)
				Me.SendPropertyChanging
				Me._Term = value
				Me.SendPropertyChanged("Term")
				Me.OnTermChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OfferTerm", DbType:="Int")>  _
	Public Property OfferTerm() As System.Nullable(Of Integer)
		Get
			Return Me._OfferTerm
		End Get
		Set
			If (Me._OfferTerm.Equals(value) = false) Then
				Me.OnOfferTermChanging(value)
				Me.SendPropertyChanging
				Me._OfferTerm = value
				Me.SendPropertyChanged("OfferTerm")
				Me.OnOfferTermChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Installment", DbType:="Money")>  _
	Public Property Installment() As System.Nullable(Of Decimal)
		Get
			Return Me._Installment
		End Get
		Set
			If (Me._Installment.Equals(value) = false) Then
				Me.OnInstallmentChanging(value)
				Me.SendPropertyChanging
				Me._Installment = value
				Me.SendPropertyChanged("Installment")
				Me.OnInstallmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OfferInstallment", DbType:="Money")>  _
	Public Property OfferInstallment() As System.Nullable(Of Decimal)
		Get
			Return Me._OfferInstallment
		End Get
		Set
			If (Me._OfferInstallment.Equals(value) = false) Then
				Me.OnOfferInstallmentChanging(value)
				Me.SendPropertyChanging
				Me._OfferInstallment = value
				Me.SendPropertyChanged("OfferInstallment")
				Me.OnOfferInstallmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rate", DbType:="Float")>  _
	Public Property Rate() As System.Nullable(Of Double)
		Get
			Return Me._Rate
		End Get
		Set
			If (Me._Rate.Equals(value) = false) Then
				Me.OnRateChanging(value)
				Me.SendPropertyChanging
				Me._Rate = value
				Me.SendPropertyChanged("Rate")
				Me.OnRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Priority", DbType:="NVarChar(50)")>  _
	Public Property Priority() As String
		Get
			Return Me._Priority
		End Get
		Set
			If (String.Equals(Me._Priority, value) = false) Then
				Me.OnPriorityChanging(value)
				Me.SendPropertyChanging
				Me._Priority = value
				Me.SendPropertyChanged("Priority")
				Me.OnPriorityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AcceptPIN", DbType:="VarChar(10)")>  _
	Public Property AcceptPIN() As String
		Get
			Return Me._AcceptPIN
		End Get
		Set
			If (String.Equals(Me._AcceptPIN, value) = false) Then
				Me.OnAcceptPINChanging(value)
				Me.SendPropertyChanging
				Me._AcceptPIN = value
				Me.SendPropertyChanged("AcceptPIN")
				Me.OnAcceptPINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsAuthorised", DbType:="Bit")>  _
	Public Property IsAuthorised() As System.Nullable(Of Boolean)
		Get
			Return Me._IsAuthorised
		End Get
		Set
			If (Me._IsAuthorised.Equals(value) = false) Then
				Me.OnIsAuthorisedChanging(value)
				Me.SendPropertyChanging
				Me._IsAuthorised = value
				Me.SendPropertyChanged("IsAuthorised")
				Me.OnIsAuthorisedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CollectPIN", DbType:="VarChar(10)")>  _
	Public Property CollectPIN() As String
		Get
			Return Me._CollectPIN
		End Get
		Set
			If (String.Equals(Me._CollectPIN, value) = false) Then
				Me.OnCollectPINChanging(value)
				Me.SendPropertyChanging
				Me._CollectPIN = value
				Me.SendPropertyChanged("CollectPIN")
				Me.OnCollectPINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsCollected", DbType:="Bit")>  _
	Public Property IsCollected() As System.Nullable(Of Boolean)
		Get
			Return Me._IsCollected
		End Get
		Set
			If (Me._IsCollected.Equals(value) = false) Then
				Me.OnIsCollectedChanging(value)
				Me.SendPropertyChanging
				Me._IsCollected = value
				Me.SendPropertyChanged("IsCollected")
				Me.OnIsCollectedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MerchantIdentifier", DbType:="NVarChar(50)")>  _
	Public Property MerchantIdentifier() As String
		Get
			Return Me._MerchantIdentifier
		End Get
		Set
			If (String.Equals(Me._MerchantIdentifier, value) = false) Then
				Me.OnMerchantIdentifierChanging(value)
				Me.SendPropertyChanging
				Me._MerchantIdentifier = value
				Me.SendPropertyChanged("MerchantIdentifier")
				Me.OnMerchantIdentifierChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TerminalIdentifier", DbType:="NVarChar(50)")>  _
	Public Property TerminalIdentifier() As String
		Get
			Return Me._TerminalIdentifier
		End Get
		Set
			If (String.Equals(Me._TerminalIdentifier, value) = false) Then
				Me.OnTerminalIdentifierChanging(value)
				Me.SendPropertyChanging
				Me._TerminalIdentifier = value
				Me.SendPropertyChanged("TerminalIdentifier")
				Me.OnTerminalIdentifierChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DeclineReason", DbType:="NVarChar(500)")>  _
	Public Property DeclineReason() As String
		Get
			Return Me._DeclineReason
		End Get
		Set
			If (String.Equals(Me._DeclineReason, value) = false) Then
				Me.OnDeclineReasonChanging(value)
				Me.SendPropertyChanging
				Me._DeclineReason = value
				Me.SendPropertyChanged("DeclineReason")
				Me.OnDeclineReasonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comments", DbType:="NVarChar(500)")>  _
	Public Property Comments() As String
		Get
			Return Me._Comments
		End Get
		Set
			If (String.Equals(Me._Comments, value) = false) Then
				Me.OnCommentsChanging(value)
				Me.SendPropertyChanging
				Me._Comments = value
				Me.SendPropertyChanged("Comments")
				Me.OnCommentsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdateBy", DbType:="BigInt")>  _
	Public Property UpdateBy() As System.Nullable(Of Long)
		Get
			Return Me._UpdateBy
		End Get
		Set
			If (Me._UpdateBy.Equals(value) = false) Then
				Me.OnUpdateByChanging(value)
				Me.SendPropertyChanging
				Me._UpdateBy = value
				Me.SendPropertyChanged("UpdateBy")
				Me.OnUpdateByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedBy", DbType:="BigInt")>  _
	Public Property CreatedBy() As System.Nullable(Of Long)
		Get
			Return Me._CreatedBy
		End Get
		Set
			If (Me._CreatedBy.Equals(value) = false) Then
				Me.OnCreatedByChanging(value)
				Me.SendPropertyChanging
				Me._CreatedBy = value
				Me.SendPropertyChanged("CreatedBy")
				Me.OnCreatedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateCreated", DbType:="DateTime")>  _
	Public Property DateCreated() As System.Nullable(Of Date)
		Get
			Return Me._DateCreated
		End Get
		Set
			If (Me._DateCreated.Equals(value) = false) Then
				Me.OnDateCreatedChanging(value)
				Me.SendPropertyChanging
				Me._DateCreated = value
				Me.SendPropertyChanged("DateCreated")
				Me.OnDateCreatedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateUpdated", DbType:="DateTime")>  _
	Public Property DateUpdated() As System.Nullable(Of Date)
		Get
			Return Me._DateUpdated
		End Get
		Set
			If (Me._DateUpdated.Equals(value) = false) Then
				Me.OnDateUpdatedChanging(value)
				Me.SendPropertyChanging
				Me._DateUpdated = value
				Me.SendPropertyChanged("DateUpdated")
				Me.OnDateUpdatedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Test", DbType:="Bit")>  _
	Public Property Test() As System.Nullable(Of Boolean)
		Get
			Return Me._Test
		End Get
		Set
			If (Me._Test.Equals(value) = false) Then
				Me.OnTestChanging(value)
				Me.SendPropertyChanging
				Me._Test = value
				Me.SendPropertyChanged("Test")
				Me.OnTestChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsComplete", DbType:="Bit")>  _
	Public Property IsComplete() As System.Nullable(Of Boolean)
		Get
			Return Me._IsComplete
		End Get
		Set
			If (Me._IsComplete.Equals(value) = false) Then
				Me.OnIsCompleteChanging(value)
				Me.SendPropertyChanging
				Me._IsComplete = value
				Me.SendPropertyChanged("IsComplete")
				Me.OnIsCompleteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsDeclined", DbType:="Bit")>  _
	Public Property IsDeclined() As System.Nullable(Of Boolean)
		Get
			Return Me._IsDeclined
		End Get
		Set
			If (Me._IsDeclined.Equals(value) = false) Then
				Me.OnIsDeclinedChanging(value)
				Me.SendPropertyChanging
				Me._IsDeclined = value
				Me.SendPropertyChanged("IsDeclined")
				Me.OnIsDeclinedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsCancelled", DbType:="Bit")>  _
	Public Property IsCancelled() As System.Nullable(Of Boolean)
		Get
			Return Me._IsCancelled
		End Get
		Set
			If (Me._IsCancelled.Equals(value) = false) Then
				Me.OnIsCancelledChanging(value)
				Me.SendPropertyChanging
				Me._IsCancelled = value
				Me.SendPropertyChanged("IsCancelled")
				Me.OnIsCancelledChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsExpired", DbType:="Bit")>  _
	Public Property IsExpired() As System.Nullable(Of Boolean)
		Get
			Return Me._IsExpired
		End Get
		Set
			If (Me._IsExpired.Equals(value) = false) Then
				Me.OnIsExpiredChanging(value)
				Me.SendPropertyChanging
				Me._IsExpired = value
				Me.SendPropertyChanged("IsExpired")
				Me.OnIsExpiredChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsArchived", DbType:="Bit")>  _
	Public Property IsArchived() As System.Nullable(Of Boolean)
		Get
			Return Me._IsArchived
		End Get
		Set
			If (Me._IsArchived.Equals(value) = false) Then
				Me.OnIsArchivedChanging(value)
				Me.SendPropertyChanging
				Me._IsArchived = value
				Me.SendPropertyChanged("IsArchived")
				Me.OnIsArchivedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsDeleted", DbType:="Bit")>  _
	Public Property IsDeleted() As System.Nullable(Of Boolean)
		Get
			Return Me._IsDeleted
		End Get
		Set
			If (Me._IsDeleted.Equals(value) = false) Then
				Me.OnIsDeletedChanging(value)
				Me.SendPropertyChanging
				Me._IsDeleted = value
				Me.SendPropertyChanged("IsDeleted")
				Me.OnIsDeletedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Application_ApplicationFieldValue", Storage:="_ApplicationFieldValues", ThisKey:="ID", OtherKey:="ApplicationID")>  _
	Public Property ApplicationFieldValues() As EntitySet(Of ApplicationFieldValue)
		Get
			Return Me._ApplicationFieldValues
		End Get
		Set
			Me._ApplicationFieldValues.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Application_ApplicationStat", Storage:="_ApplicationStat", ThisKey:="ID", OtherKey:="ID", IsUnique:=true, IsForeignKey:=false)>  _
	Public Property ApplicationStat() As ApplicationStat
		Get
			Return Me._ApplicationStat.Entity
		End Get
		Set
			Dim previousValue As ApplicationStat = Me._ApplicationStat.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ApplicationStat.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ApplicationStat.Entity = Nothing
					previousValue.Application = Nothing
				End If
				Me._ApplicationStat.Entity = value
				If (Object.Equals(value, Nothing) = false) Then
					value.Application = Me
				End If
				Me.SendPropertyChanged("ApplicationStat")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Application_Audit", Storage:="_Audits", ThisKey:="ID", OtherKey:="ApplicationID")>  _
	Public Property Audits() As EntitySet(Of Audit)
		Get
			Return Me._Audits
		End Get
		Set
			Me._Audits.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_ApplicationFieldValues(ByVal entity As ApplicationFieldValue)
		Me.SendPropertyChanging
		entity.Application = Me
	End Sub
	
	Private Sub detach_ApplicationFieldValues(ByVal entity As ApplicationFieldValue)
		Me.SendPropertyChanging
		entity.Application = Nothing
	End Sub
	
	Private Sub attach_Audits(ByVal entity As Audit)
		Me.SendPropertyChanging
		entity.Application = Me
	End Sub
	
	Private Sub detach_Audits(ByVal entity As Audit)
		Me.SendPropertyChanging
		entity.Application = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Settings")>  _
Partial Public Class Setting
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Long
	
	Private _DatabaseID As Long
	
	Private _EnvironmentID As Long
	
	Private _RepositoryID As Long
	
	Private _RulesEngineID As Long
	
	Private _RulesEngineDBName As String
	
	Private _EnvironmentRepositoryID As Long
	
	Private _MainRepository As String
	
	Private _UpdateBy As System.Nullable(Of Long)
	
	Private _CreatedBy As System.Nullable(Of Long)
	
	Private _DateCreated As System.Nullable(Of Date)
	
	Private _DateUpdated As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Long)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnDatabaseIDChanging(value As Long)
    End Sub
    Partial Private Sub OnDatabaseIDChanged()
    End Sub
    Partial Private Sub OnEnvironmentIDChanging(value As Long)
    End Sub
    Partial Private Sub OnEnvironmentIDChanged()
    End Sub
    Partial Private Sub OnRepositoryIDChanging(value As Long)
    End Sub
    Partial Private Sub OnRepositoryIDChanged()
    End Sub
    Partial Private Sub OnRulesEngineIDChanging(value As Long)
    End Sub
    Partial Private Sub OnRulesEngineIDChanged()
    End Sub
    Partial Private Sub OnRulesEngineDBNameChanging(value As String)
    End Sub
    Partial Private Sub OnRulesEngineDBNameChanged()
    End Sub
    Partial Private Sub OnEnvironmentRepositoryIDChanging(value As Long)
    End Sub
    Partial Private Sub OnEnvironmentRepositoryIDChanged()
    End Sub
    Partial Private Sub OnMainRepositoryChanging(value As String)
    End Sub
    Partial Private Sub OnMainRepositoryChanged()
    End Sub
    Partial Private Sub OnUpdateByChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnUpdateByChanged()
    End Sub
    Partial Private Sub OnCreatedByChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnCreatedByChanged()
    End Sub
    Partial Private Sub OnDateCreatedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateCreatedChanged()
    End Sub
    Partial Private Sub OnDateUpdatedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateUpdatedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Long
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DatabaseID", DbType:="BigInt NOT NULL")>  _
	Public Property DatabaseID() As Long
		Get
			Return Me._DatabaseID
		End Get
		Set
			If ((Me._DatabaseID = value)  _
						= false) Then
				Me.OnDatabaseIDChanging(value)
				Me.SendPropertyChanging
				Me._DatabaseID = value
				Me.SendPropertyChanged("DatabaseID")
				Me.OnDatabaseIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EnvironmentID", DbType:="BigInt NOT NULL")>  _
	Public Property EnvironmentID() As Long
		Get
			Return Me._EnvironmentID
		End Get
		Set
			If ((Me._EnvironmentID = value)  _
						= false) Then
				Me.OnEnvironmentIDChanging(value)
				Me.SendPropertyChanging
				Me._EnvironmentID = value
				Me.SendPropertyChanged("EnvironmentID")
				Me.OnEnvironmentIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RepositoryID", DbType:="BigInt NOT NULL")>  _
	Public Property RepositoryID() As Long
		Get
			Return Me._RepositoryID
		End Get
		Set
			If ((Me._RepositoryID = value)  _
						= false) Then
				Me.OnRepositoryIDChanging(value)
				Me.SendPropertyChanging
				Me._RepositoryID = value
				Me.SendPropertyChanged("RepositoryID")
				Me.OnRepositoryIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RulesEngineID", DbType:="BigInt NOT NULL")>  _
	Public Property RulesEngineID() As Long
		Get
			Return Me._RulesEngineID
		End Get
		Set
			If ((Me._RulesEngineID = value)  _
						= false) Then
				Me.OnRulesEngineIDChanging(value)
				Me.SendPropertyChanging
				Me._RulesEngineID = value
				Me.SendPropertyChanged("RulesEngineID")
				Me.OnRulesEngineIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RulesEngineDBName", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false)>  _
	Public Property RulesEngineDBName() As String
		Get
			Return Me._RulesEngineDBName
		End Get
		Set
			If (String.Equals(Me._RulesEngineDBName, value) = false) Then
				Me.OnRulesEngineDBNameChanging(value)
				Me.SendPropertyChanging
				Me._RulesEngineDBName = value
				Me.SendPropertyChanged("RulesEngineDBName")
				Me.OnRulesEngineDBNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EnvironmentRepositoryID", DbType:="BigInt NOT NULL")>  _
	Public Property EnvironmentRepositoryID() As Long
		Get
			Return Me._EnvironmentRepositoryID
		End Get
		Set
			If ((Me._EnvironmentRepositoryID = value)  _
						= false) Then
				Me.OnEnvironmentRepositoryIDChanging(value)
				Me.SendPropertyChanging
				Me._EnvironmentRepositoryID = value
				Me.SendPropertyChanged("EnvironmentRepositoryID")
				Me.OnEnvironmentRepositoryIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MainRepository", DbType:="NVarChar(500) NOT NULL", CanBeNull:=false)>  _
	Public Property MainRepository() As String
		Get
			Return Me._MainRepository
		End Get
		Set
			If (String.Equals(Me._MainRepository, value) = false) Then
				Me.OnMainRepositoryChanging(value)
				Me.SendPropertyChanging
				Me._MainRepository = value
				Me.SendPropertyChanged("MainRepository")
				Me.OnMainRepositoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdateBy", DbType:="BigInt")>  _
	Public Property UpdateBy() As System.Nullable(Of Long)
		Get
			Return Me._UpdateBy
		End Get
		Set
			If (Me._UpdateBy.Equals(value) = false) Then
				Me.OnUpdateByChanging(value)
				Me.SendPropertyChanging
				Me._UpdateBy = value
				Me.SendPropertyChanged("UpdateBy")
				Me.OnUpdateByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedBy", DbType:="BigInt")>  _
	Public Property CreatedBy() As System.Nullable(Of Long)
		Get
			Return Me._CreatedBy
		End Get
		Set
			If (Me._CreatedBy.Equals(value) = false) Then
				Me.OnCreatedByChanging(value)
				Me.SendPropertyChanging
				Me._CreatedBy = value
				Me.SendPropertyChanged("CreatedBy")
				Me.OnCreatedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateCreated", DbType:="DateTime")>  _
	Public Property DateCreated() As System.Nullable(Of Date)
		Get
			Return Me._DateCreated
		End Get
		Set
			If (Me._DateCreated.Equals(value) = false) Then
				Me.OnDateCreatedChanging(value)
				Me.SendPropertyChanging
				Me._DateCreated = value
				Me.SendPropertyChanged("DateCreated")
				Me.OnDateCreatedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateUpdated", DbType:="DateTime")>  _
	Public Property DateUpdated() As System.Nullable(Of Date)
		Get
			Return Me._DateUpdated
		End Get
		Set
			If (Me._DateUpdated.Equals(value) = false) Then
				Me.OnDateUpdatedChanging(value)
				Me.SendPropertyChanging
				Me._DateUpdated = value
				Me.SendPropertyChanged("DateUpdated")
				Me.OnDateUpdatedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ApplicationFieldValue")>  _
Partial Public Class ApplicationFieldValue
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Long
	
	Private _Title As String
	
	Private _ApplicationID As System.Nullable(Of Long)
	
	Private _TerminalTypeID As System.Nullable(Of Long)
	
	Private _FieldDefinitionEntityID As System.Nullable(Of Long)
	
	Private _CreatedBy As System.Nullable(Of Long)
	
	Private _UpdatedBy As System.Nullable(Of Long)
	
	Private _DateCreated As System.Nullable(Of Date)
	
	Private _DateUpdated As System.Nullable(Of Date)
	
	Private _IsDeleted As System.Nullable(Of Boolean)
	
	Private _Application As EntityRef(Of Application)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Long)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnApplicationIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnApplicationIDChanged()
    End Sub
    Partial Private Sub OnTerminalTypeIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnTerminalTypeIDChanged()
    End Sub
    Partial Private Sub OnFieldDefinitionEntityIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnFieldDefinitionEntityIDChanged()
    End Sub
    Partial Private Sub OnCreatedByChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnCreatedByChanged()
    End Sub
    Partial Private Sub OnUpdatedByChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnUpdatedByChanged()
    End Sub
    Partial Private Sub OnDateCreatedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateCreatedChanged()
    End Sub
    Partial Private Sub OnDateUpdatedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateUpdatedChanged()
    End Sub
    Partial Private Sub OnIsDeletedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsDeletedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Application = CType(Nothing, EntityRef(Of Application))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Long
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(MAX)")>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me.OnTitleChanging(value)
				Me.SendPropertyChanging
				Me._Title = value
				Me.SendPropertyChanged("Title")
				Me.OnTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApplicationID", DbType:="BigInt")>  _
	Public Property ApplicationID() As System.Nullable(Of Long)
		Get
			Return Me._ApplicationID
		End Get
		Set
			If (Me._ApplicationID.Equals(value) = false) Then
				If Me._Application.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnApplicationIDChanging(value)
				Me.SendPropertyChanging
				Me._ApplicationID = value
				Me.SendPropertyChanged("ApplicationID")
				Me.OnApplicationIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TerminalTypeID", DbType:="BigInt")>  _
	Public Property TerminalTypeID() As System.Nullable(Of Long)
		Get
			Return Me._TerminalTypeID
		End Get
		Set
			If (Me._TerminalTypeID.Equals(value) = false) Then
				Me.OnTerminalTypeIDChanging(value)
				Me.SendPropertyChanging
				Me._TerminalTypeID = value
				Me.SendPropertyChanged("TerminalTypeID")
				Me.OnTerminalTypeIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FieldDefinitionEntityID", DbType:="BigInt")>  _
	Public Property FieldDefinitionEntityID() As System.Nullable(Of Long)
		Get
			Return Me._FieldDefinitionEntityID
		End Get
		Set
			If (Me._FieldDefinitionEntityID.Equals(value) = false) Then
				Me.OnFieldDefinitionEntityIDChanging(value)
				Me.SendPropertyChanging
				Me._FieldDefinitionEntityID = value
				Me.SendPropertyChanged("FieldDefinitionEntityID")
				Me.OnFieldDefinitionEntityIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedBy", DbType:="BigInt")>  _
	Public Property CreatedBy() As System.Nullable(Of Long)
		Get
			Return Me._CreatedBy
		End Get
		Set
			If (Me._CreatedBy.Equals(value) = false) Then
				Me.OnCreatedByChanging(value)
				Me.SendPropertyChanging
				Me._CreatedBy = value
				Me.SendPropertyChanged("CreatedBy")
				Me.OnCreatedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdatedBy", DbType:="BigInt")>  _
	Public Property UpdatedBy() As System.Nullable(Of Long)
		Get
			Return Me._UpdatedBy
		End Get
		Set
			If (Me._UpdatedBy.Equals(value) = false) Then
				Me.OnUpdatedByChanging(value)
				Me.SendPropertyChanging
				Me._UpdatedBy = value
				Me.SendPropertyChanged("UpdatedBy")
				Me.OnUpdatedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateCreated", DbType:="DateTime")>  _
	Public Property DateCreated() As System.Nullable(Of Date)
		Get
			Return Me._DateCreated
		End Get
		Set
			If (Me._DateCreated.Equals(value) = false) Then
				Me.OnDateCreatedChanging(value)
				Me.SendPropertyChanging
				Me._DateCreated = value
				Me.SendPropertyChanged("DateCreated")
				Me.OnDateCreatedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateUpdated", DbType:="DateTime")>  _
	Public Property DateUpdated() As System.Nullable(Of Date)
		Get
			Return Me._DateUpdated
		End Get
		Set
			If (Me._DateUpdated.Equals(value) = false) Then
				Me.OnDateUpdatedChanging(value)
				Me.SendPropertyChanging
				Me._DateUpdated = value
				Me.SendPropertyChanged("DateUpdated")
				Me.OnDateUpdatedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsDeleted", DbType:="Bit")>  _
	Public Property IsDeleted() As System.Nullable(Of Boolean)
		Get
			Return Me._IsDeleted
		End Get
		Set
			If (Me._IsDeleted.Equals(value) = false) Then
				Me.OnIsDeletedChanging(value)
				Me.SendPropertyChanging
				Me._IsDeleted = value
				Me.SendPropertyChanged("IsDeleted")
				Me.OnIsDeletedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Application_ApplicationFieldValue", Storage:="_Application", ThisKey:="ApplicationID", OtherKey:="ID", IsForeignKey:=true)>  _
	Public Property Application() As Application
		Get
			Return Me._Application.Entity
		End Get
		Set
			Dim previousValue As Application = Me._Application.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Application.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Application.Entity = Nothing
					previousValue.ApplicationFieldValues.Remove(Me)
				End If
				Me._Application.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ApplicationFieldValues.Add(Me)
					Me._ApplicationID = value.ID
				Else
					Me._ApplicationID = CType(Nothing, Nullable(Of Long))
				End If
				Me.SendPropertyChanged("Application")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ApplicationStats")>  _
Partial Public Class ApplicationStat
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Long
	
	Private _CreditCheckResult As String
	
	Private _DateCreated As System.Nullable(Of Date)
	
	Private _DateAuthorised As System.Nullable(Of Date)
	
	Private _DateCreditCheck As System.Nullable(Of Date)
	
	Private _DateBankChecked As System.Nullable(Of Date)
	
	Private _DateCaptured As System.Nullable(Of Date)
	
	Private _DateMarketing As System.Nullable(Of Date)
	
	Private _DateTerms As System.Nullable(Of Date)
	
	Private _DateFirstSentToBank As System.Nullable(Of Date)
	
	Private _DateSentToBank As System.Nullable(Of Date)
	
	Private _DateFirstOfferMade As System.Nullable(Of Date)
	
	Private _DateOfferMade As System.Nullable(Of Date)
	
	Private _DateFirstOfferAccepted As System.Nullable(Of Date)
	
	Private _DateOfferAccepted As System.Nullable(Of Date)
	
	Private _DateFirstOfferRejected As System.Nullable(Of Date)
	
	Private _DateOfferRejected As System.Nullable(Of Date)
	
	Private _DateFirstDeclined As System.Nullable(Of Date)
	
	Private _DateDeclined As System.Nullable(Of Date)
	
	Private _DateApproved As System.Nullable(Of Date)
	
	Private _DateAccepted As System.Nullable(Of Date)
	
	Private _DateRejected As System.Nullable(Of Date)
	
	Private _DateDOMandate As System.Nullable(Of Date)
	
	Private _DateContracted As System.Nullable(Of Date)
	
	Private _DateCollected As System.Nullable(Of Date)
	
	Private _DatePaymentUploaded As System.Nullable(Of Date)
	
	Private _DatePaymentVerified As System.Nullable(Of Date)
	
	Private _DatePaymentReceived As System.Nullable(Of Date)
	
	Private _DateDisbursed As System.Nullable(Of Date)
	
	Private _DateCancelled As System.Nullable(Of Date)
	
	Private _DateExpired As System.Nullable(Of Date)
	
	Private _DateCompleted As System.Nullable(Of Date)
	
	Private _Authorised As System.Nullable(Of Boolean)
	
	Private _CreditCheck As System.Nullable(Of Boolean)
	
	Private _BankChecked As System.Nullable(Of Integer)
	
	Private _Captured As System.Nullable(Of Boolean)
	
	Private _Marketing As System.Nullable(Of Boolean)
	
	Private _Terms As System.Nullable(Of Boolean)
	
	Private _SentToBank As System.Nullable(Of Integer)
	
	Private _OfferMade As System.Nullable(Of Integer)
	
	Private _OfferAccepted As System.Nullable(Of Integer)
	
	Private _OfferRejected As System.Nullable(Of Integer)
	
	Private _Declined As System.Nullable(Of Integer)
	
	Private _Pending As System.Nullable(Of Boolean)
	
	Private _Approved As System.Nullable(Of Boolean)
	
	Private _Accepted As System.Nullable(Of Boolean)
	
	Private _Rejected As System.Nullable(Of Boolean)
	
	Private _DOMandate As System.Nullable(Of Boolean)
	
	Private _Contracted As System.Nullable(Of Boolean)
	
	Private _Collected As System.Nullable(Of Boolean)
	
	Private _PaymentUploaded As System.Nullable(Of Boolean)
	
	Private _PaymentVerified As System.Nullable(Of Boolean)
	
	Private _PaymentReceived As System.Nullable(Of Boolean)
	
	Private _Disbursed As System.Nullable(Of Boolean)
	
	Private _Cancelled As System.Nullable(Of Boolean)
	
	Private _Expired As System.Nullable(Of Boolean)
	
	Private _Completed As System.Nullable(Of Boolean)
	
	Private _DateLastUpdated As System.Nullable(Of Date)
	
	Private _Application As EntityRef(Of Application)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Long)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCreditCheckResultChanging(value As String)
    End Sub
    Partial Private Sub OnCreditCheckResultChanged()
    End Sub
    Partial Private Sub OnDateCreatedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateCreatedChanged()
    End Sub
    Partial Private Sub OnDateAuthorisedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateAuthorisedChanged()
    End Sub
    Partial Private Sub OnDateCreditCheckChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateCreditCheckChanged()
    End Sub
    Partial Private Sub OnDateBankCheckedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateBankCheckedChanged()
    End Sub
    Partial Private Sub OnDateCapturedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateCapturedChanged()
    End Sub
    Partial Private Sub OnDateMarketingChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateMarketingChanged()
    End Sub
    Partial Private Sub OnDateTermsChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateTermsChanged()
    End Sub
    Partial Private Sub OnDateFirstSentToBankChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateFirstSentToBankChanged()
    End Sub
    Partial Private Sub OnDateSentToBankChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateSentToBankChanged()
    End Sub
    Partial Private Sub OnDateFirstOfferMadeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateFirstOfferMadeChanged()
    End Sub
    Partial Private Sub OnDateOfferMadeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateOfferMadeChanged()
    End Sub
    Partial Private Sub OnDateFirstOfferAcceptedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateFirstOfferAcceptedChanged()
    End Sub
    Partial Private Sub OnDateOfferAcceptedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateOfferAcceptedChanged()
    End Sub
    Partial Private Sub OnDateFirstOfferRejectedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateFirstOfferRejectedChanged()
    End Sub
    Partial Private Sub OnDateOfferRejectedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateOfferRejectedChanged()
    End Sub
    Partial Private Sub OnDateFirstDeclinedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateFirstDeclinedChanged()
    End Sub
    Partial Private Sub OnDateDeclinedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateDeclinedChanged()
    End Sub
    Partial Private Sub OnDateApprovedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateApprovedChanged()
    End Sub
    Partial Private Sub OnDateAcceptedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateAcceptedChanged()
    End Sub
    Partial Private Sub OnDateRejectedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateRejectedChanged()
    End Sub
    Partial Private Sub OnDateDOMandateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateDOMandateChanged()
    End Sub
    Partial Private Sub OnDateContractedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateContractedChanged()
    End Sub
    Partial Private Sub OnDateCollectedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateCollectedChanged()
    End Sub
    Partial Private Sub OnDatePaymentUploadedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDatePaymentUploadedChanged()
    End Sub
    Partial Private Sub OnDatePaymentVerifiedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDatePaymentVerifiedChanged()
    End Sub
    Partial Private Sub OnDatePaymentReceivedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDatePaymentReceivedChanged()
    End Sub
    Partial Private Sub OnDateDisbursedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateDisbursedChanged()
    End Sub
    Partial Private Sub OnDateCancelledChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateCancelledChanged()
    End Sub
    Partial Private Sub OnDateExpiredChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateExpiredChanged()
    End Sub
    Partial Private Sub OnDateCompletedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateCompletedChanged()
    End Sub
    Partial Private Sub OnAuthorisedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnAuthorisedChanged()
    End Sub
    Partial Private Sub OnCreditCheckChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCreditCheckChanged()
    End Sub
    Partial Private Sub OnBankCheckedChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBankCheckedChanged()
    End Sub
    Partial Private Sub OnCapturedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCapturedChanged()
    End Sub
    Partial Private Sub OnMarketingChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnMarketingChanged()
    End Sub
    Partial Private Sub OnTermsChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnTermsChanged()
    End Sub
    Partial Private Sub OnSentToBankChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSentToBankChanged()
    End Sub
    Partial Private Sub OnOfferMadeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOfferMadeChanged()
    End Sub
    Partial Private Sub OnOfferAcceptedChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOfferAcceptedChanged()
    End Sub
    Partial Private Sub OnOfferRejectedChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOfferRejectedChanged()
    End Sub
    Partial Private Sub OnDeclinedChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDeclinedChanged()
    End Sub
    Partial Private Sub OnPendingChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnPendingChanged()
    End Sub
    Partial Private Sub OnApprovedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnApprovedChanged()
    End Sub
    Partial Private Sub OnAcceptedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnAcceptedChanged()
    End Sub
    Partial Private Sub OnRejectedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnRejectedChanged()
    End Sub
    Partial Private Sub OnDOMandateChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnDOMandateChanged()
    End Sub
    Partial Private Sub OnContractedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnContractedChanged()
    End Sub
    Partial Private Sub OnCollectedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCollectedChanged()
    End Sub
    Partial Private Sub OnPaymentUploadedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnPaymentUploadedChanged()
    End Sub
    Partial Private Sub OnPaymentVerifiedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnPaymentVerifiedChanged()
    End Sub
    Partial Private Sub OnPaymentReceivedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnPaymentReceivedChanged()
    End Sub
    Partial Private Sub OnDisbursedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnDisbursedChanged()
    End Sub
    Partial Private Sub OnCancelledChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCancelledChanged()
    End Sub
    Partial Private Sub OnExpiredChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnExpiredChanged()
    End Sub
    Partial Private Sub OnCompletedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCompletedChanged()
    End Sub
    Partial Private Sub OnDateLastUpdatedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateLastUpdatedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Application = CType(Nothing, EntityRef(Of Application))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="BigInt NOT NULL", IsPrimaryKey:=true)>  _
	Public Property ID() As Long
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				If Me._Application.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreditCheckResult", DbType:="NVarChar(MAX)")>  _
	Public Property CreditCheckResult() As String
		Get
			Return Me._CreditCheckResult
		End Get
		Set
			If (String.Equals(Me._CreditCheckResult, value) = false) Then
				Me.OnCreditCheckResultChanging(value)
				Me.SendPropertyChanging
				Me._CreditCheckResult = value
				Me.SendPropertyChanged("CreditCheckResult")
				Me.OnCreditCheckResultChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateCreated", DbType:="DateTime")>  _
	Public Property DateCreated() As System.Nullable(Of Date)
		Get
			Return Me._DateCreated
		End Get
		Set
			If (Me._DateCreated.Equals(value) = false) Then
				Me.OnDateCreatedChanging(value)
				Me.SendPropertyChanging
				Me._DateCreated = value
				Me.SendPropertyChanged("DateCreated")
				Me.OnDateCreatedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateAuthorised", DbType:="DateTime")>  _
	Public Property DateAuthorised() As System.Nullable(Of Date)
		Get
			Return Me._DateAuthorised
		End Get
		Set
			If (Me._DateAuthorised.Equals(value) = false) Then
				Me.OnDateAuthorisedChanging(value)
				Me.SendPropertyChanging
				Me._DateAuthorised = value
				Me.SendPropertyChanged("DateAuthorised")
				Me.OnDateAuthorisedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateCreditCheck", DbType:="DateTime")>  _
	Public Property DateCreditCheck() As System.Nullable(Of Date)
		Get
			Return Me._DateCreditCheck
		End Get
		Set
			If (Me._DateCreditCheck.Equals(value) = false) Then
				Me.OnDateCreditCheckChanging(value)
				Me.SendPropertyChanging
				Me._DateCreditCheck = value
				Me.SendPropertyChanged("DateCreditCheck")
				Me.OnDateCreditCheckChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateBankChecked", DbType:="DateTime")>  _
	Public Property DateBankChecked() As System.Nullable(Of Date)
		Get
			Return Me._DateBankChecked
		End Get
		Set
			If (Me._DateBankChecked.Equals(value) = false) Then
				Me.OnDateBankCheckedChanging(value)
				Me.SendPropertyChanging
				Me._DateBankChecked = value
				Me.SendPropertyChanged("DateBankChecked")
				Me.OnDateBankCheckedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateCaptured", DbType:="DateTime")>  _
	Public Property DateCaptured() As System.Nullable(Of Date)
		Get
			Return Me._DateCaptured
		End Get
		Set
			If (Me._DateCaptured.Equals(value) = false) Then
				Me.OnDateCapturedChanging(value)
				Me.SendPropertyChanging
				Me._DateCaptured = value
				Me.SendPropertyChanged("DateCaptured")
				Me.OnDateCapturedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateMarketing", DbType:="DateTime")>  _
	Public Property DateMarketing() As System.Nullable(Of Date)
		Get
			Return Me._DateMarketing
		End Get
		Set
			If (Me._DateMarketing.Equals(value) = false) Then
				Me.OnDateMarketingChanging(value)
				Me.SendPropertyChanging
				Me._DateMarketing = value
				Me.SendPropertyChanged("DateMarketing")
				Me.OnDateMarketingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateTerms", DbType:="DateTime")>  _
	Public Property DateTerms() As System.Nullable(Of Date)
		Get
			Return Me._DateTerms
		End Get
		Set
			If (Me._DateTerms.Equals(value) = false) Then
				Me.OnDateTermsChanging(value)
				Me.SendPropertyChanging
				Me._DateTerms = value
				Me.SendPropertyChanged("DateTerms")
				Me.OnDateTermsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateFirstSentToBank", DbType:="DateTime")>  _
	Public Property DateFirstSentToBank() As System.Nullable(Of Date)
		Get
			Return Me._DateFirstSentToBank
		End Get
		Set
			If (Me._DateFirstSentToBank.Equals(value) = false) Then
				Me.OnDateFirstSentToBankChanging(value)
				Me.SendPropertyChanging
				Me._DateFirstSentToBank = value
				Me.SendPropertyChanged("DateFirstSentToBank")
				Me.OnDateFirstSentToBankChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateSentToBank", DbType:="DateTime")>  _
	Public Property DateSentToBank() As System.Nullable(Of Date)
		Get
			Return Me._DateSentToBank
		End Get
		Set
			If (Me._DateSentToBank.Equals(value) = false) Then
				Me.OnDateSentToBankChanging(value)
				Me.SendPropertyChanging
				Me._DateSentToBank = value
				Me.SendPropertyChanged("DateSentToBank")
				Me.OnDateSentToBankChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateFirstOfferMade", DbType:="DateTime")>  _
	Public Property DateFirstOfferMade() As System.Nullable(Of Date)
		Get
			Return Me._DateFirstOfferMade
		End Get
		Set
			If (Me._DateFirstOfferMade.Equals(value) = false) Then
				Me.OnDateFirstOfferMadeChanging(value)
				Me.SendPropertyChanging
				Me._DateFirstOfferMade = value
				Me.SendPropertyChanged("DateFirstOfferMade")
				Me.OnDateFirstOfferMadeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateOfferMade", DbType:="DateTime")>  _
	Public Property DateOfferMade() As System.Nullable(Of Date)
		Get
			Return Me._DateOfferMade
		End Get
		Set
			If (Me._DateOfferMade.Equals(value) = false) Then
				Me.OnDateOfferMadeChanging(value)
				Me.SendPropertyChanging
				Me._DateOfferMade = value
				Me.SendPropertyChanged("DateOfferMade")
				Me.OnDateOfferMadeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateFirstOfferAccepted", DbType:="DateTime")>  _
	Public Property DateFirstOfferAccepted() As System.Nullable(Of Date)
		Get
			Return Me._DateFirstOfferAccepted
		End Get
		Set
			If (Me._DateFirstOfferAccepted.Equals(value) = false) Then
				Me.OnDateFirstOfferAcceptedChanging(value)
				Me.SendPropertyChanging
				Me._DateFirstOfferAccepted = value
				Me.SendPropertyChanged("DateFirstOfferAccepted")
				Me.OnDateFirstOfferAcceptedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateOfferAccepted", DbType:="DateTime")>  _
	Public Property DateOfferAccepted() As System.Nullable(Of Date)
		Get
			Return Me._DateOfferAccepted
		End Get
		Set
			If (Me._DateOfferAccepted.Equals(value) = false) Then
				Me.OnDateOfferAcceptedChanging(value)
				Me.SendPropertyChanging
				Me._DateOfferAccepted = value
				Me.SendPropertyChanged("DateOfferAccepted")
				Me.OnDateOfferAcceptedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateFirstOfferRejected", DbType:="DateTime")>  _
	Public Property DateFirstOfferRejected() As System.Nullable(Of Date)
		Get
			Return Me._DateFirstOfferRejected
		End Get
		Set
			If (Me._DateFirstOfferRejected.Equals(value) = false) Then
				Me.OnDateFirstOfferRejectedChanging(value)
				Me.SendPropertyChanging
				Me._DateFirstOfferRejected = value
				Me.SendPropertyChanged("DateFirstOfferRejected")
				Me.OnDateFirstOfferRejectedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateOfferRejected", DbType:="DateTime")>  _
	Public Property DateOfferRejected() As System.Nullable(Of Date)
		Get
			Return Me._DateOfferRejected
		End Get
		Set
			If (Me._DateOfferRejected.Equals(value) = false) Then
				Me.OnDateOfferRejectedChanging(value)
				Me.SendPropertyChanging
				Me._DateOfferRejected = value
				Me.SendPropertyChanged("DateOfferRejected")
				Me.OnDateOfferRejectedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateFirstDeclined", DbType:="DateTime")>  _
	Public Property DateFirstDeclined() As System.Nullable(Of Date)
		Get
			Return Me._DateFirstDeclined
		End Get
		Set
			If (Me._DateFirstDeclined.Equals(value) = false) Then
				Me.OnDateFirstDeclinedChanging(value)
				Me.SendPropertyChanging
				Me._DateFirstDeclined = value
				Me.SendPropertyChanged("DateFirstDeclined")
				Me.OnDateFirstDeclinedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateDeclined", DbType:="DateTime")>  _
	Public Property DateDeclined() As System.Nullable(Of Date)
		Get
			Return Me._DateDeclined
		End Get
		Set
			If (Me._DateDeclined.Equals(value) = false) Then
				Me.OnDateDeclinedChanging(value)
				Me.SendPropertyChanging
				Me._DateDeclined = value
				Me.SendPropertyChanged("DateDeclined")
				Me.OnDateDeclinedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateApproved", DbType:="DateTime")>  _
	Public Property DateApproved() As System.Nullable(Of Date)
		Get
			Return Me._DateApproved
		End Get
		Set
			If (Me._DateApproved.Equals(value) = false) Then
				Me.OnDateApprovedChanging(value)
				Me.SendPropertyChanging
				Me._DateApproved = value
				Me.SendPropertyChanged("DateApproved")
				Me.OnDateApprovedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateAccepted", DbType:="DateTime")>  _
	Public Property DateAccepted() As System.Nullable(Of Date)
		Get
			Return Me._DateAccepted
		End Get
		Set
			If (Me._DateAccepted.Equals(value) = false) Then
				Me.OnDateAcceptedChanging(value)
				Me.SendPropertyChanging
				Me._DateAccepted = value
				Me.SendPropertyChanged("DateAccepted")
				Me.OnDateAcceptedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateRejected", DbType:="DateTime")>  _
	Public Property DateRejected() As System.Nullable(Of Date)
		Get
			Return Me._DateRejected
		End Get
		Set
			If (Me._DateRejected.Equals(value) = false) Then
				Me.OnDateRejectedChanging(value)
				Me.SendPropertyChanging
				Me._DateRejected = value
				Me.SendPropertyChanged("DateRejected")
				Me.OnDateRejectedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateDOMandate", DbType:="DateTime")>  _
	Public Property DateDOMandate() As System.Nullable(Of Date)
		Get
			Return Me._DateDOMandate
		End Get
		Set
			If (Me._DateDOMandate.Equals(value) = false) Then
				Me.OnDateDOMandateChanging(value)
				Me.SendPropertyChanging
				Me._DateDOMandate = value
				Me.SendPropertyChanged("DateDOMandate")
				Me.OnDateDOMandateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateContracted", DbType:="DateTime")>  _
	Public Property DateContracted() As System.Nullable(Of Date)
		Get
			Return Me._DateContracted
		End Get
		Set
			If (Me._DateContracted.Equals(value) = false) Then
				Me.OnDateContractedChanging(value)
				Me.SendPropertyChanging
				Me._DateContracted = value
				Me.SendPropertyChanged("DateContracted")
				Me.OnDateContractedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateCollected", DbType:="DateTime")>  _
	Public Property DateCollected() As System.Nullable(Of Date)
		Get
			Return Me._DateCollected
		End Get
		Set
			If (Me._DateCollected.Equals(value) = false) Then
				Me.OnDateCollectedChanging(value)
				Me.SendPropertyChanging
				Me._DateCollected = value
				Me.SendPropertyChanged("DateCollected")
				Me.OnDateCollectedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DatePaymentUploaded", DbType:="DateTime")>  _
	Public Property DatePaymentUploaded() As System.Nullable(Of Date)
		Get
			Return Me._DatePaymentUploaded
		End Get
		Set
			If (Me._DatePaymentUploaded.Equals(value) = false) Then
				Me.OnDatePaymentUploadedChanging(value)
				Me.SendPropertyChanging
				Me._DatePaymentUploaded = value
				Me.SendPropertyChanged("DatePaymentUploaded")
				Me.OnDatePaymentUploadedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DatePaymentVerified", DbType:="DateTime")>  _
	Public Property DatePaymentVerified() As System.Nullable(Of Date)
		Get
			Return Me._DatePaymentVerified
		End Get
		Set
			If (Me._DatePaymentVerified.Equals(value) = false) Then
				Me.OnDatePaymentVerifiedChanging(value)
				Me.SendPropertyChanging
				Me._DatePaymentVerified = value
				Me.SendPropertyChanged("DatePaymentVerified")
				Me.OnDatePaymentVerifiedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DatePaymentReceived", DbType:="DateTime")>  _
	Public Property DatePaymentReceived() As System.Nullable(Of Date)
		Get
			Return Me._DatePaymentReceived
		End Get
		Set
			If (Me._DatePaymentReceived.Equals(value) = false) Then
				Me.OnDatePaymentReceivedChanging(value)
				Me.SendPropertyChanging
				Me._DatePaymentReceived = value
				Me.SendPropertyChanged("DatePaymentReceived")
				Me.OnDatePaymentReceivedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateDisbursed", DbType:="DateTime")>  _
	Public Property DateDisbursed() As System.Nullable(Of Date)
		Get
			Return Me._DateDisbursed
		End Get
		Set
			If (Me._DateDisbursed.Equals(value) = false) Then
				Me.OnDateDisbursedChanging(value)
				Me.SendPropertyChanging
				Me._DateDisbursed = value
				Me.SendPropertyChanged("DateDisbursed")
				Me.OnDateDisbursedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateCancelled", DbType:="DateTime")>  _
	Public Property DateCancelled() As System.Nullable(Of Date)
		Get
			Return Me._DateCancelled
		End Get
		Set
			If (Me._DateCancelled.Equals(value) = false) Then
				Me.OnDateCancelledChanging(value)
				Me.SendPropertyChanging
				Me._DateCancelled = value
				Me.SendPropertyChanged("DateCancelled")
				Me.OnDateCancelledChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateExpired", DbType:="DateTime")>  _
	Public Property DateExpired() As System.Nullable(Of Date)
		Get
			Return Me._DateExpired
		End Get
		Set
			If (Me._DateExpired.Equals(value) = false) Then
				Me.OnDateExpiredChanging(value)
				Me.SendPropertyChanging
				Me._DateExpired = value
				Me.SendPropertyChanged("DateExpired")
				Me.OnDateExpiredChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateCompleted", DbType:="DateTime")>  _
	Public Property DateCompleted() As System.Nullable(Of Date)
		Get
			Return Me._DateCompleted
		End Get
		Set
			If (Me._DateCompleted.Equals(value) = false) Then
				Me.OnDateCompletedChanging(value)
				Me.SendPropertyChanging
				Me._DateCompleted = value
				Me.SendPropertyChanged("DateCompleted")
				Me.OnDateCompletedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Authorised", DbType:="Bit")>  _
	Public Property Authorised() As System.Nullable(Of Boolean)
		Get
			Return Me._Authorised
		End Get
		Set
			If (Me._Authorised.Equals(value) = false) Then
				Me.OnAuthorisedChanging(value)
				Me.SendPropertyChanging
				Me._Authorised = value
				Me.SendPropertyChanged("Authorised")
				Me.OnAuthorisedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreditCheck", DbType:="Bit")>  _
	Public Property CreditCheck() As System.Nullable(Of Boolean)
		Get
			Return Me._CreditCheck
		End Get
		Set
			If (Me._CreditCheck.Equals(value) = false) Then
				Me.OnCreditCheckChanging(value)
				Me.SendPropertyChanging
				Me._CreditCheck = value
				Me.SendPropertyChanged("CreditCheck")
				Me.OnCreditCheckChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BankChecked", DbType:="Int")>  _
	Public Property BankChecked() As System.Nullable(Of Integer)
		Get
			Return Me._BankChecked
		End Get
		Set
			If (Me._BankChecked.Equals(value) = false) Then
				Me.OnBankCheckedChanging(value)
				Me.SendPropertyChanging
				Me._BankChecked = value
				Me.SendPropertyChanged("BankChecked")
				Me.OnBankCheckedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Captured", DbType:="Bit")>  _
	Public Property Captured() As System.Nullable(Of Boolean)
		Get
			Return Me._Captured
		End Get
		Set
			If (Me._Captured.Equals(value) = false) Then
				Me.OnCapturedChanging(value)
				Me.SendPropertyChanging
				Me._Captured = value
				Me.SendPropertyChanged("Captured")
				Me.OnCapturedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Marketing", DbType:="Bit")>  _
	Public Property Marketing() As System.Nullable(Of Boolean)
		Get
			Return Me._Marketing
		End Get
		Set
			If (Me._Marketing.Equals(value) = false) Then
				Me.OnMarketingChanging(value)
				Me.SendPropertyChanging
				Me._Marketing = value
				Me.SendPropertyChanged("Marketing")
				Me.OnMarketingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Terms", DbType:="Bit")>  _
	Public Property Terms() As System.Nullable(Of Boolean)
		Get
			Return Me._Terms
		End Get
		Set
			If (Me._Terms.Equals(value) = false) Then
				Me.OnTermsChanging(value)
				Me.SendPropertyChanging
				Me._Terms = value
				Me.SendPropertyChanged("Terms")
				Me.OnTermsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SentToBank", DbType:="Int")>  _
	Public Property SentToBank() As System.Nullable(Of Integer)
		Get
			Return Me._SentToBank
		End Get
		Set
			If (Me._SentToBank.Equals(value) = false) Then
				Me.OnSentToBankChanging(value)
				Me.SendPropertyChanging
				Me._SentToBank = value
				Me.SendPropertyChanged("SentToBank")
				Me.OnSentToBankChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OfferMade", DbType:="Int")>  _
	Public Property OfferMade() As System.Nullable(Of Integer)
		Get
			Return Me._OfferMade
		End Get
		Set
			If (Me._OfferMade.Equals(value) = false) Then
				Me.OnOfferMadeChanging(value)
				Me.SendPropertyChanging
				Me._OfferMade = value
				Me.SendPropertyChanged("OfferMade")
				Me.OnOfferMadeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OfferAccepted", DbType:="Int")>  _
	Public Property OfferAccepted() As System.Nullable(Of Integer)
		Get
			Return Me._OfferAccepted
		End Get
		Set
			If (Me._OfferAccepted.Equals(value) = false) Then
				Me.OnOfferAcceptedChanging(value)
				Me.SendPropertyChanging
				Me._OfferAccepted = value
				Me.SendPropertyChanged("OfferAccepted")
				Me.OnOfferAcceptedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OfferRejected", DbType:="Int")>  _
	Public Property OfferRejected() As System.Nullable(Of Integer)
		Get
			Return Me._OfferRejected
		End Get
		Set
			If (Me._OfferRejected.Equals(value) = false) Then
				Me.OnOfferRejectedChanging(value)
				Me.SendPropertyChanging
				Me._OfferRejected = value
				Me.SendPropertyChanged("OfferRejected")
				Me.OnOfferRejectedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Declined", DbType:="Int")>  _
	Public Property Declined() As System.Nullable(Of Integer)
		Get
			Return Me._Declined
		End Get
		Set
			If (Me._Declined.Equals(value) = false) Then
				Me.OnDeclinedChanging(value)
				Me.SendPropertyChanging
				Me._Declined = value
				Me.SendPropertyChanged("Declined")
				Me.OnDeclinedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pending", DbType:="Bit")>  _
	Public Property Pending() As System.Nullable(Of Boolean)
		Get
			Return Me._Pending
		End Get
		Set
			If (Me._Pending.Equals(value) = false) Then
				Me.OnPendingChanging(value)
				Me.SendPropertyChanging
				Me._Pending = value
				Me.SendPropertyChanged("Pending")
				Me.OnPendingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Approved", DbType:="Bit")>  _
	Public Property Approved() As System.Nullable(Of Boolean)
		Get
			Return Me._Approved
		End Get
		Set
			If (Me._Approved.Equals(value) = false) Then
				Me.OnApprovedChanging(value)
				Me.SendPropertyChanging
				Me._Approved = value
				Me.SendPropertyChanged("Approved")
				Me.OnApprovedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Accepted", DbType:="Bit")>  _
	Public Property Accepted() As System.Nullable(Of Boolean)
		Get
			Return Me._Accepted
		End Get
		Set
			If (Me._Accepted.Equals(value) = false) Then
				Me.OnAcceptedChanging(value)
				Me.SendPropertyChanging
				Me._Accepted = value
				Me.SendPropertyChanged("Accepted")
				Me.OnAcceptedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rejected", DbType:="Bit")>  _
	Public Property Rejected() As System.Nullable(Of Boolean)
		Get
			Return Me._Rejected
		End Get
		Set
			If (Me._Rejected.Equals(value) = false) Then
				Me.OnRejectedChanging(value)
				Me.SendPropertyChanging
				Me._Rejected = value
				Me.SendPropertyChanged("Rejected")
				Me.OnRejectedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOMandate", DbType:="Bit")>  _
	Public Property DOMandate() As System.Nullable(Of Boolean)
		Get
			Return Me._DOMandate
		End Get
		Set
			If (Me._DOMandate.Equals(value) = false) Then
				Me.OnDOMandateChanging(value)
				Me.SendPropertyChanging
				Me._DOMandate = value
				Me.SendPropertyChanged("DOMandate")
				Me.OnDOMandateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Contracted", DbType:="Bit")>  _
	Public Property Contracted() As System.Nullable(Of Boolean)
		Get
			Return Me._Contracted
		End Get
		Set
			If (Me._Contracted.Equals(value) = false) Then
				Me.OnContractedChanging(value)
				Me.SendPropertyChanging
				Me._Contracted = value
				Me.SendPropertyChanged("Contracted")
				Me.OnContractedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Collected", DbType:="Bit")>  _
	Public Property Collected() As System.Nullable(Of Boolean)
		Get
			Return Me._Collected
		End Get
		Set
			If (Me._Collected.Equals(value) = false) Then
				Me.OnCollectedChanging(value)
				Me.SendPropertyChanging
				Me._Collected = value
				Me.SendPropertyChanged("Collected")
				Me.OnCollectedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentUploaded", DbType:="Bit")>  _
	Public Property PaymentUploaded() As System.Nullable(Of Boolean)
		Get
			Return Me._PaymentUploaded
		End Get
		Set
			If (Me._PaymentUploaded.Equals(value) = false) Then
				Me.OnPaymentUploadedChanging(value)
				Me.SendPropertyChanging
				Me._PaymentUploaded = value
				Me.SendPropertyChanged("PaymentUploaded")
				Me.OnPaymentUploadedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentVerified", DbType:="Bit")>  _
	Public Property PaymentVerified() As System.Nullable(Of Boolean)
		Get
			Return Me._PaymentVerified
		End Get
		Set
			If (Me._PaymentVerified.Equals(value) = false) Then
				Me.OnPaymentVerifiedChanging(value)
				Me.SendPropertyChanging
				Me._PaymentVerified = value
				Me.SendPropertyChanged("PaymentVerified")
				Me.OnPaymentVerifiedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentReceived", DbType:="Bit")>  _
	Public Property PaymentReceived() As System.Nullable(Of Boolean)
		Get
			Return Me._PaymentReceived
		End Get
		Set
			If (Me._PaymentReceived.Equals(value) = false) Then
				Me.OnPaymentReceivedChanging(value)
				Me.SendPropertyChanging
				Me._PaymentReceived = value
				Me.SendPropertyChanged("PaymentReceived")
				Me.OnPaymentReceivedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Disbursed", DbType:="Bit")>  _
	Public Property Disbursed() As System.Nullable(Of Boolean)
		Get
			Return Me._Disbursed
		End Get
		Set
			If (Me._Disbursed.Equals(value) = false) Then
				Me.OnDisbursedChanging(value)
				Me.SendPropertyChanging
				Me._Disbursed = value
				Me.SendPropertyChanged("Disbursed")
				Me.OnDisbursedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cancelled", DbType:="Bit")>  _
	Public Property Cancelled() As System.Nullable(Of Boolean)
		Get
			Return Me._Cancelled
		End Get
		Set
			If (Me._Cancelled.Equals(value) = false) Then
				Me.OnCancelledChanging(value)
				Me.SendPropertyChanging
				Me._Cancelled = value
				Me.SendPropertyChanged("Cancelled")
				Me.OnCancelledChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Expired", DbType:="Bit")>  _
	Public Property Expired() As System.Nullable(Of Boolean)
		Get
			Return Me._Expired
		End Get
		Set
			If (Me._Expired.Equals(value) = false) Then
				Me.OnExpiredChanging(value)
				Me.SendPropertyChanging
				Me._Expired = value
				Me.SendPropertyChanged("Expired")
				Me.OnExpiredChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Completed", DbType:="Bit")>  _
	Public Property Completed() As System.Nullable(Of Boolean)
		Get
			Return Me._Completed
		End Get
		Set
			If (Me._Completed.Equals(value) = false) Then
				Me.OnCompletedChanging(value)
				Me.SendPropertyChanging
				Me._Completed = value
				Me.SendPropertyChanged("Completed")
				Me.OnCompletedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateLastUpdated", DbType:="DateTime")>  _
	Public Property DateLastUpdated() As System.Nullable(Of Date)
		Get
			Return Me._DateLastUpdated
		End Get
		Set
			If (Me._DateLastUpdated.Equals(value) = false) Then
				Me.OnDateLastUpdatedChanging(value)
				Me.SendPropertyChanging
				Me._DateLastUpdated = value
				Me.SendPropertyChanged("DateLastUpdated")
				Me.OnDateLastUpdatedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Application_ApplicationStat", Storage:="_Application", ThisKey:="ID", OtherKey:="ID", IsForeignKey:=true)>  _
	Public Property Application() As Application
		Get
			Return Me._Application.Entity
		End Get
		Set
			Dim previousValue As Application = Me._Application.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Application.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Application.Entity = Nothing
					previousValue.ApplicationStat = Nothing
				End If
				Me._Application.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ApplicationStat = Me
					Me._ID = value.ID
				Else
					Me._ID = CType(Nothing, Long)
				End If
				Me.SendPropertyChanged("Application")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Audit")>  _
Partial Public Class Audit
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Long
	
	Private _AuditDate As System.Nullable(Of Date)
	
	Private _ApplicationID As System.Nullable(Of Long)
	
	Private _AuditTypeID As System.Nullable(Of Long)
	
	Private _MerchantTerminalID As System.Nullable(Of Long)
	
	Private _CreditProviderID As System.Nullable(Of Long)
	
	Private _Name As String
	
	Private _Details As String
	
	Private _IPAddress As String
	
	Private _ActorID As System.Nullable(Of Long)
	
	Private _Application As EntityRef(Of Application)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Long)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnAuditDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAuditDateChanged()
    End Sub
    Partial Private Sub OnApplicationIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnApplicationIDChanged()
    End Sub
    Partial Private Sub OnAuditTypeIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnAuditTypeIDChanged()
    End Sub
    Partial Private Sub OnMerchantTerminalIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnMerchantTerminalIDChanged()
    End Sub
    Partial Private Sub OnCreditProviderIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnCreditProviderIDChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnDetailsChanging(value As String)
    End Sub
    Partial Private Sub OnDetailsChanged()
    End Sub
    Partial Private Sub OnIPAddressChanging(value As String)
    End Sub
    Partial Private Sub OnIPAddressChanged()
    End Sub
    Partial Private Sub OnActorIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnActorIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Application = CType(Nothing, EntityRef(Of Application))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Long
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AuditDate", DbType:="DateTime")>  _
	Public Property AuditDate() As System.Nullable(Of Date)
		Get
			Return Me._AuditDate
		End Get
		Set
			If (Me._AuditDate.Equals(value) = false) Then
				Me.OnAuditDateChanging(value)
				Me.SendPropertyChanging
				Me._AuditDate = value
				Me.SendPropertyChanged("AuditDate")
				Me.OnAuditDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApplicationID", DbType:="BigInt")>  _
	Public Property ApplicationID() As System.Nullable(Of Long)
		Get
			Return Me._ApplicationID
		End Get
		Set
			If (Me._ApplicationID.Equals(value) = false) Then
				If Me._Application.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnApplicationIDChanging(value)
				Me.SendPropertyChanging
				Me._ApplicationID = value
				Me.SendPropertyChanged("ApplicationID")
				Me.OnApplicationIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AuditTypeID", DbType:="BigInt")>  _
	Public Property AuditTypeID() As System.Nullable(Of Long)
		Get
			Return Me._AuditTypeID
		End Get
		Set
			If (Me._AuditTypeID.Equals(value) = false) Then
				Me.OnAuditTypeIDChanging(value)
				Me.SendPropertyChanging
				Me._AuditTypeID = value
				Me.SendPropertyChanged("AuditTypeID")
				Me.OnAuditTypeIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MerchantTerminalID", DbType:="BigInt")>  _
	Public Property MerchantTerminalID() As System.Nullable(Of Long)
		Get
			Return Me._MerchantTerminalID
		End Get
		Set
			If (Me._MerchantTerminalID.Equals(value) = false) Then
				Me.OnMerchantTerminalIDChanging(value)
				Me.SendPropertyChanging
				Me._MerchantTerminalID = value
				Me.SendPropertyChanged("MerchantTerminalID")
				Me.OnMerchantTerminalIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreditProviderID", DbType:="BigInt")>  _
	Public Property CreditProviderID() As System.Nullable(Of Long)
		Get
			Return Me._CreditProviderID
		End Get
		Set
			If (Me._CreditProviderID.Equals(value) = false) Then
				Me.OnCreditProviderIDChanging(value)
				Me.SendPropertyChanging
				Me._CreditProviderID = value
				Me.SendPropertyChanged("CreditProviderID")
				Me.OnCreditProviderIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(500)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Details", DbType:="NVarChar(MAX)")>  _
	Public Property Details() As String
		Get
			Return Me._Details
		End Get
		Set
			If (String.Equals(Me._Details, value) = false) Then
				Me.OnDetailsChanging(value)
				Me.SendPropertyChanging
				Me._Details = value
				Me.SendPropertyChanged("Details")
				Me.OnDetailsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IPAddress", DbType:="NVarChar(50)")>  _
	Public Property IPAddress() As String
		Get
			Return Me._IPAddress
		End Get
		Set
			If (String.Equals(Me._IPAddress, value) = false) Then
				Me.OnIPAddressChanging(value)
				Me.SendPropertyChanging
				Me._IPAddress = value
				Me.SendPropertyChanged("IPAddress")
				Me.OnIPAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ActorID", DbType:="BigInt")>  _
	Public Property ActorID() As System.Nullable(Of Long)
		Get
			Return Me._ActorID
		End Get
		Set
			If (Me._ActorID.Equals(value) = false) Then
				Me.OnActorIDChanging(value)
				Me.SendPropertyChanging
				Me._ActorID = value
				Me.SendPropertyChanged("ActorID")
				Me.OnActorIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Application_Audit", Storage:="_Application", ThisKey:="ApplicationID", OtherKey:="ID", IsForeignKey:=true)>  _
	Public Property Application() As Application
		Get
			Return Me._Application.Entity
		End Get
		Set
			Dim previousValue As Application = Me._Application.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Application.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Application.Entity = Nothing
					previousValue.Audits.Remove(Me)
				End If
				Me._Application.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Audits.Add(Me)
					Me._ApplicationID = value.ID
				Else
					Me._ApplicationID = CType(Nothing, Nullable(Of Long))
				End If
				Me.SendPropertyChanged("Application")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vAdditionalFields")>  _
Partial Public Class vAdditionalField
	
	Private _ApplicationID As System.Nullable(Of Long)
	
	Private _ID As Long
	
	Private _FieldTitle As String
	
	Private _FieldValue As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApplicationID", DbType:="BigInt")>  _
	Public Property ApplicationID() As System.Nullable(Of Long)
		Get
			Return Me._ApplicationID
		End Get
		Set
			If (Me._ApplicationID.Equals(value) = false) Then
				Me._ApplicationID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="BigInt NOT NULL")>  _
	Public Property ID() As Long
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FieldTitle", DbType:="NVarChar(500) NOT NULL", CanBeNull:=false)>  _
	Public Property FieldTitle() As String
		Get
			Return Me._FieldTitle
		End Get
		Set
			If (String.Equals(Me._FieldTitle, value) = false) Then
				Me._FieldTitle = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FieldValue", DbType:="NVarChar(MAX)")>  _
	Public Property FieldValue() As String
		Get
			Return Me._FieldValue
		End Get
		Set
			If (String.Equals(Me._FieldValue, value) = false) Then
				Me._FieldValue = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vWFApp")>  _
Partial Public Class vWFApp
	
	Private _ApplicationID As String
	
	Private _VirtualActorId As System.Nullable(Of System.Guid)
	
	Private _Id As System.Nullable(Of System.Guid)
	
	Private _UserID As System.Nullable(Of Integer)
	
	Private _Name As String
	
	Private _Email As String
	
	Private _IsActiveUser As System.Nullable(Of Boolean)
	
	Private _ActivityDisplayName As String
	
	Private _Priority As System.Nullable(Of Integer)
	
	Private _InternalStatus As String
	
	Private _CurrentStatus As String
	
	Private _OwnershipDateTime As System.Nullable(Of Date)
	
	Private _exName As String
	
	Private _EIStatus As String
	
	Private _Status As String
	
	Private _StartedOn As System.Nullable(Of Date)
	
	Private _Output As String
	
	Private _InlinkActionExecutionDetailsID As System.Nullable(Of Integer)
	
	Private _InlinkActionOutput As String
	
	Private _ActionType As String
	
	Private _LocalVariablesId As System.Nullable(Of Integer)
	
	Private _ExecutionEndedAt As System.Nullable(Of Date)
	
	Private _QueueID As System.Nullable(Of System.Guid)
	
	Private _Queue As String
	
	Private _NewItemCount As System.Nullable(Of Integer)
	
	Private _InProgressItemCount As System.Nullable(Of Integer)
	
	Private _CompletedItemCount As System.Nullable(Of Integer)
	
	Private _WorkItemID As System.Guid
	
	Private _ActivityID As System.Guid
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApplicationID", DbType:="NVarChar(MAX)")>  _
	Public Property ApplicationID() As String
		Get
			Return Me._ApplicationID
		End Get
		Set
			If (String.Equals(Me._ApplicationID, value) = false) Then
				Me._ApplicationID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VirtualActorId", DbType:="UniqueIdentifier")>  _
	Public Property VirtualActorId() As System.Nullable(Of System.Guid)
		Get
			Return Me._VirtualActorId
		End Get
		Set
			If (Me._VirtualActorId.Equals(value) = false) Then
				Me._VirtualActorId = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", DbType:="UniqueIdentifier")>  _
	Public Property Id() As System.Nullable(Of System.Guid)
		Get
			Return Me._Id
		End Get
		Set
			If (Me._Id.Equals(value) = false) Then
				Me._Id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", DbType:="Int")>  _
	Public Property UserID() As System.Nullable(Of Integer)
		Get
			Return Me._UserID
		End Get
		Set
			If (Me._UserID.Equals(value) = false) Then
				Me._UserID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(250)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(200)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me._Email = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActiveUser", DbType:="Bit")>  _
	Public Property IsActiveUser() As System.Nullable(Of Boolean)
		Get
			Return Me._IsActiveUser
		End Get
		Set
			If (Me._IsActiveUser.Equals(value) = false) Then
				Me._IsActiveUser = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ActivityDisplayName", DbType:="NVarChar(100)")>  _
	Public Property ActivityDisplayName() As String
		Get
			Return Me._ActivityDisplayName
		End Get
		Set
			If (String.Equals(Me._ActivityDisplayName, value) = false) Then
				Me._ActivityDisplayName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Priority", DbType:="Int")>  _
	Public Property Priority() As System.Nullable(Of Integer)
		Get
			Return Me._Priority
		End Get
		Set
			If (Me._Priority.Equals(value) = false) Then
				Me._Priority = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InternalStatus", DbType:="Char(2)")>  _
	Public Property InternalStatus() As String
		Get
			Return Me._InternalStatus
		End Get
		Set
			If (String.Equals(Me._InternalStatus, value) = false) Then
				Me._InternalStatus = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CurrentStatus", DbType:="NVarChar(50)")>  _
	Public Property CurrentStatus() As String
		Get
			Return Me._CurrentStatus
		End Get
		Set
			If (String.Equals(Me._CurrentStatus, value) = false) Then
				Me._CurrentStatus = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OwnershipDateTime", DbType:="DateTime")>  _
	Public Property OwnershipDateTime() As System.Nullable(Of Date)
		Get
			Return Me._OwnershipDateTime
		End Get
		Set
			If (Me._OwnershipDateTime.Equals(value) = false) Then
				Me._OwnershipDateTime = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_exName", DbType:="NVarChar(250)")>  _
	Public Property exName() As String
		Get
			Return Me._exName
		End Get
		Set
			If (String.Equals(Me._exName, value) = false) Then
				Me._exName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EIStatus", DbType:="NChar(2)")>  _
	Public Property EIStatus() As String
		Get
			Return Me._EIStatus
		End Get
		Set
			If (String.Equals(Me._EIStatus, value) = false) Then
				Me._EIStatus = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="NVarChar(50)")>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me._Status = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartedOn", DbType:="DateTime")>  _
	Public Property StartedOn() As System.Nullable(Of Date)
		Get
			Return Me._StartedOn
		End Get
		Set
			If (Me._StartedOn.Equals(value) = false) Then
				Me._StartedOn = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Output", DbType:="NVarChar(100)")>  _
	Public Property Output() As String
		Get
			Return Me._Output
		End Get
		Set
			If (String.Equals(Me._Output, value) = false) Then
				Me._Output = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InlinkActionExecutionDetailsID", DbType:="Int")>  _
	Public Property InlinkActionExecutionDetailsID() As System.Nullable(Of Integer)
		Get
			Return Me._InlinkActionExecutionDetailsID
		End Get
		Set
			If (Me._InlinkActionExecutionDetailsID.Equals(value) = false) Then
				Me._InlinkActionExecutionDetailsID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InlinkActionOutput", DbType:="NVarChar(100)")>  _
	Public Property InlinkActionOutput() As String
		Get
			Return Me._InlinkActionOutput
		End Get
		Set
			If (String.Equals(Me._InlinkActionOutput, value) = false) Then
				Me._InlinkActionOutput = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ActionType", DbType:="NVarChar(100)")>  _
	Public Property ActionType() As String
		Get
			Return Me._ActionType
		End Get
		Set
			If (String.Equals(Me._ActionType, value) = false) Then
				Me._ActionType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LocalVariablesId", DbType:="Int")>  _
	Public Property LocalVariablesId() As System.Nullable(Of Integer)
		Get
			Return Me._LocalVariablesId
		End Get
		Set
			If (Me._LocalVariablesId.Equals(value) = false) Then
				Me._LocalVariablesId = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExecutionEndedAt", DbType:="DateTime")>  _
	Public Property ExecutionEndedAt() As System.Nullable(Of Date)
		Get
			Return Me._ExecutionEndedAt
		End Get
		Set
			If (Me._ExecutionEndedAt.Equals(value) = false) Then
				Me._ExecutionEndedAt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QueueID", DbType:="UniqueIdentifier")>  _
	Public Property QueueID() As System.Nullable(Of System.Guid)
		Get
			Return Me._QueueID
		End Get
		Set
			If (Me._QueueID.Equals(value) = false) Then
				Me._QueueID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Queue", DbType:="NVarChar(250)")>  _
	Public Property Queue() As String
		Get
			Return Me._Queue
		End Get
		Set
			If (String.Equals(Me._Queue, value) = false) Then
				Me._Queue = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NewItemCount", DbType:="Int")>  _
	Public Property NewItemCount() As System.Nullable(Of Integer)
		Get
			Return Me._NewItemCount
		End Get
		Set
			If (Me._NewItemCount.Equals(value) = false) Then
				Me._NewItemCount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InProgressItemCount", DbType:="Int")>  _
	Public Property InProgressItemCount() As System.Nullable(Of Integer)
		Get
			Return Me._InProgressItemCount
		End Get
		Set
			If (Me._InProgressItemCount.Equals(value) = false) Then
				Me._InProgressItemCount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CompletedItemCount", DbType:="Int")>  _
	Public Property CompletedItemCount() As System.Nullable(Of Integer)
		Get
			Return Me._CompletedItemCount
		End Get
		Set
			If (Me._CompletedItemCount.Equals(value) = false) Then
				Me._CompletedItemCount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WorkItemID", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property WorkItemID() As System.Guid
		Get
			Return Me._WorkItemID
		End Get
		Set
			If ((Me._WorkItemID = value)  _
						= false) Then
				Me._WorkItemID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ActivityID", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property ActivityID() As System.Guid
		Get
			Return Me._ActivityID
		End Get
		Set
			If ((Me._ActivityID = value)  _
						= false) Then
				Me._ActivityID = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vApplications")>  _
Partial Public Class vApplication
	
	Private _AuditTypeID As System.Nullable(Of Long)
	
	Private _ID As Long
	
	Private _InternalStatusID As System.Nullable(Of Long)
	
	Private _FirstName As String
	
	Private _Surname As String
	
	Private _IDNumber As String
	
	Private _MobileNumber As String
	
	Private _FinanceAmount As System.Nullable(Of Decimal)
	
	Private _OfferAmount As System.Nullable(Of Decimal)
	
	Private _StatusID As System.Nullable(Of Long)
	
	Private _Status As String
	
	Private _BankID As System.Nullable(Of Long)
	
	Private _Bank As String
	
	Private _MerchantID As System.Nullable(Of Long)
	
	Private _Merchant As String
	
	Private _IndustryID As System.Nullable(Of Long)
	
	Private _Industry As String
	
	Private _Priority As String
	
	Private _Minutes As System.Nullable(Of Integer)
	
	Private _WorkingDate As System.Nullable(Of Date)
	
	Private _DeclineReason As String
	
	Private _StatusDescription As String
	
	Private _Code As String
	
	Private _ParentMerchantID As System.Nullable(Of Long)
	
	Private _BankSelected As String
	
	Private _DebitOrderReference As String
	
	Private _ParentMerchant As String
	
	Private _Term As System.Nullable(Of Integer)
	
	Private _CreditProviderID As System.Nullable(Of Long)
	
	Private _FinancialInstitutionID As System.Nullable(Of Long)
	
	Private _Reference As String
	
	Private _TerminalIdentifier As String
	
	Private _GrossIncome As System.Nullable(Of Decimal)
	
	Private _NettIncome As System.Nullable(Of Decimal)
	
	Private _OfferTerm As System.Nullable(Of Integer)
	
	Private _OfferInstallment As System.Nullable(Of Decimal)
	
	Private _Test As System.Nullable(Of Boolean)
	
	Private _CPDescription As String
	
	Private _EnvironmentRepositoryID As System.Nullable(Of Long)
	
	Private _MerchantTerminalID As System.Nullable(Of Long)
	
	Private _ProductID As System.Nullable(Of Long)
	
	Private _TerminalTypeID As System.Nullable(Of Long)
	
	Private _Rate As System.Nullable(Of Double)
	
	Private _ChannelID As System.Nullable(Of Long)
	
	Private _InternalStatus As String
	
	Private _DateCreated As System.Nullable(Of Date)
	
	Private _DateAuthorised As System.Nullable(Of Date)
	
	Private _DateBankChecked As System.Nullable(Of Date)
	
	Private _DateCaptured As System.Nullable(Of Date)
	
	Private _DateMarketing As System.Nullable(Of Date)
	
	Private _DateTerms As System.Nullable(Of Date)
	
	Private _DateFirstSentToBank As System.Nullable(Of Date)
	
	Private _DateSentToBank As System.Nullable(Of Date)
	
	Private _DateFirstOfferMade As System.Nullable(Of Date)
	
	Private _DateOfferMade As System.Nullable(Of Date)
	
	Private _DateFirstOfferAccepted As System.Nullable(Of Date)
	
	Private _DateOfferAccepted As System.Nullable(Of Date)
	
	Private _DateFirstOfferRejected As System.Nullable(Of Date)
	
	Private _DateOfferRejected As System.Nullable(Of Date)
	
	Private _DateFirstDeclined As System.Nullable(Of Date)
	
	Private _DateDeclined As System.Nullable(Of Date)
	
	Private _DateApproved As System.Nullable(Of Date)
	
	Private _DateAccepted As System.Nullable(Of Date)
	
	Private _DateDOMandate As System.Nullable(Of Date)
	
	Private _DateContracted As System.Nullable(Of Date)
	
	Private _DateCollected As System.Nullable(Of Date)
	
	Private _DatePaymentUploaded As System.Nullable(Of Date)
	
	Private _DatePaymentVerified As System.Nullable(Of Date)
	
	Private _DatePaymentReceived As System.Nullable(Of Date)
	
	Private _DateDisbursed As System.Nullable(Of Date)
	
	Private _DateCancelled As System.Nullable(Of Date)
	
	Private _DateExpired As System.Nullable(Of Date)
	
	Private _DateCompleted As System.Nullable(Of Date)
	
	Private _Authorised As System.Nullable(Of Boolean)
	
	Private _BankChecked As System.Nullable(Of Integer)
	
	Private _Captured As System.Nullable(Of Boolean)
	
	Private _Marketing As System.Nullable(Of Boolean)
	
	Private _Terms As System.Nullable(Of Boolean)
	
	Private _SentToBank As System.Nullable(Of Integer)
	
	Private _OfferMade As System.Nullable(Of Integer)
	
	Private _OfferAccepted As System.Nullable(Of Integer)
	
	Private _OfferRejected As System.Nullable(Of Integer)
	
	Private _Declined As System.Nullable(Of Integer)
	
	Private _Pending As System.Nullable(Of Boolean)
	
	Private _Approved As System.Nullable(Of Boolean)
	
	Private _Accepted As System.Nullable(Of Boolean)
	
	Private _DOMandate As System.Nullable(Of Boolean)
	
	Private _Contracted As System.Nullable(Of Boolean)
	
	Private _Collected As System.Nullable(Of Boolean)
	
	Private _PaymentUploaded As System.Nullable(Of Boolean)
	
	Private _PaymentVerified As System.Nullable(Of Boolean)
	
	Private _PaymentReceived As System.Nullable(Of Boolean)
	
	Private _Disbursed As System.Nullable(Of Boolean)
	
	Private _DateLastUpdated As System.Nullable(Of Date)
	
	Private _Completed As System.Nullable(Of Boolean)
	
	Private _Expired As System.Nullable(Of Boolean)
	
	Private _Cancelled As System.Nullable(Of Boolean)
	
	Private _CreditCheckResult As String
	
	Private _DateCreditCheck As System.Nullable(Of Date)
	
	Private _DateRejected As System.Nullable(Of Date)
	
	Private _CreditCheck As System.Nullable(Of Boolean)
	
	Private _Rejected As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AuditTypeID", DbType:="BigInt")>  _
	Public Property AuditTypeID() As System.Nullable(Of Long)
		Get
			Return Me._AuditTypeID
		End Get
		Set
			If (Me._AuditTypeID.Equals(value) = false) Then
				Me._AuditTypeID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="BigInt NOT NULL")>  _
	Public Property ID() As Long
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InternalStatusID", DbType:="BigInt")>  _
	Public Property InternalStatusID() As System.Nullable(Of Long)
		Get
			Return Me._InternalStatusID
		End Get
		Set
			If (Me._InternalStatusID.Equals(value) = false) Then
				Me._InternalStatusID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FirstName", DbType:="NVarChar(500)")>  _
	Public Property FirstName() As String
		Get
			Return Me._FirstName
		End Get
		Set
			If (String.Equals(Me._FirstName, value) = false) Then
				Me._FirstName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Surname", DbType:="NVarChar(500)")>  _
	Public Property Surname() As String
		Get
			Return Me._Surname
		End Get
		Set
			If (String.Equals(Me._Surname, value) = false) Then
				Me._Surname = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDNumber", DbType:="NVarChar(50)")>  _
	Public Property IDNumber() As String
		Get
			Return Me._IDNumber
		End Get
		Set
			If (String.Equals(Me._IDNumber, value) = false) Then
				Me._IDNumber = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MobileNumber", DbType:="NVarChar(50)")>  _
	Public Property MobileNumber() As String
		Get
			Return Me._MobileNumber
		End Get
		Set
			If (String.Equals(Me._MobileNumber, value) = false) Then
				Me._MobileNumber = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FinanceAmount", DbType:="Money")>  _
	Public Property FinanceAmount() As System.Nullable(Of Decimal)
		Get
			Return Me._FinanceAmount
		End Get
		Set
			If (Me._FinanceAmount.Equals(value) = false) Then
				Me._FinanceAmount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OfferAmount", DbType:="Money")>  _
	Public Property OfferAmount() As System.Nullable(Of Decimal)
		Get
			Return Me._OfferAmount
		End Get
		Set
			If (Me._OfferAmount.Equals(value) = false) Then
				Me._OfferAmount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StatusID", DbType:="BigInt")>  _
	Public Property StatusID() As System.Nullable(Of Long)
		Get
			Return Me._StatusID
		End Get
		Set
			If (Me._StatusID.Equals(value) = false) Then
				Me._StatusID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="NVarChar(500)")>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me._Status = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BankID", DbType:="BigInt")>  _
	Public Property BankID() As System.Nullable(Of Long)
		Get
			Return Me._BankID
		End Get
		Set
			If (Me._BankID.Equals(value) = false) Then
				Me._BankID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bank", DbType:="NVarChar(255)")>  _
	Public Property Bank() As String
		Get
			Return Me._Bank
		End Get
		Set
			If (String.Equals(Me._Bank, value) = false) Then
				Me._Bank = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MerchantID", DbType:="BigInt")>  _
	Public Property MerchantID() As System.Nullable(Of Long)
		Get
			Return Me._MerchantID
		End Get
		Set
			If (Me._MerchantID.Equals(value) = false) Then
				Me._MerchantID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Merchant", DbType:="NVarChar(500)")>  _
	Public Property Merchant() As String
		Get
			Return Me._Merchant
		End Get
		Set
			If (String.Equals(Me._Merchant, value) = false) Then
				Me._Merchant = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IndustryID", DbType:="BigInt")>  _
	Public Property IndustryID() As System.Nullable(Of Long)
		Get
			Return Me._IndustryID
		End Get
		Set
			If (Me._IndustryID.Equals(value) = false) Then
				Me._IndustryID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Industry", DbType:="NVarChar(500)")>  _
	Public Property Industry() As String
		Get
			Return Me._Industry
		End Get
		Set
			If (String.Equals(Me._Industry, value) = false) Then
				Me._Industry = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Priority", DbType:="NVarChar(10)")>  _
	Public Property Priority() As String
		Get
			Return Me._Priority
		End Get
		Set
			If (String.Equals(Me._Priority, value) = false) Then
				Me._Priority = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Minutes", DbType:="Int")>  _
	Public Property Minutes() As System.Nullable(Of Integer)
		Get
			Return Me._Minutes
		End Get
		Set
			If (Me._Minutes.Equals(value) = false) Then
				Me._Minutes = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WorkingDate", DbType:="DateTime")>  _
	Public Property WorkingDate() As System.Nullable(Of Date)
		Get
			Return Me._WorkingDate
		End Get
		Set
			If (Me._WorkingDate.Equals(value) = false) Then
				Me._WorkingDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DeclineReason", DbType:="NVarChar(500)")>  _
	Public Property DeclineReason() As String
		Get
			Return Me._DeclineReason
		End Get
		Set
			If (String.Equals(Me._DeclineReason, value) = false) Then
				Me._DeclineReason = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StatusDescription", DbType:="NVarChar(MAX)")>  _
	Public Property StatusDescription() As String
		Get
			Return Me._StatusDescription
		End Get
		Set
			If (String.Equals(Me._StatusDescription, value) = false) Then
				Me._StatusDescription = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="NVarChar(50)")>  _
	Public Property Code() As String
		Get
			Return Me._Code
		End Get
		Set
			If (String.Equals(Me._Code, value) = false) Then
				Me._Code = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ParentMerchantID", DbType:="BigInt")>  _
	Public Property ParentMerchantID() As System.Nullable(Of Long)
		Get
			Return Me._ParentMerchantID
		End Get
		Set
			If (Me._ParentMerchantID.Equals(value) = false) Then
				Me._ParentMerchantID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BankSelected", DbType:="NVarChar(255)")>  _
	Public Property BankSelected() As String
		Get
			Return Me._BankSelected
		End Get
		Set
			If (String.Equals(Me._BankSelected, value) = false) Then
				Me._BankSelected = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DebitOrderReference", DbType:="NVarChar(50)")>  _
	Public Property DebitOrderReference() As String
		Get
			Return Me._DebitOrderReference
		End Get
		Set
			If (String.Equals(Me._DebitOrderReference, value) = false) Then
				Me._DebitOrderReference = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ParentMerchant", DbType:="NVarChar(500)")>  _
	Public Property ParentMerchant() As String
		Get
			Return Me._ParentMerchant
		End Get
		Set
			If (String.Equals(Me._ParentMerchant, value) = false) Then
				Me._ParentMerchant = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Term", DbType:="Int")>  _
	Public Property Term() As System.Nullable(Of Integer)
		Get
			Return Me._Term
		End Get
		Set
			If (Me._Term.Equals(value) = false) Then
				Me._Term = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreditProviderID", DbType:="BigInt")>  _
	Public Property CreditProviderID() As System.Nullable(Of Long)
		Get
			Return Me._CreditProviderID
		End Get
		Set
			If (Me._CreditProviderID.Equals(value) = false) Then
				Me._CreditProviderID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FinancialInstitutionID", DbType:="BigInt")>  _
	Public Property FinancialInstitutionID() As System.Nullable(Of Long)
		Get
			Return Me._FinancialInstitutionID
		End Get
		Set
			If (Me._FinancialInstitutionID.Equals(value) = false) Then
				Me._FinancialInstitutionID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Reference", DbType:="NVarChar(50)")>  _
	Public Property Reference() As String
		Get
			Return Me._Reference
		End Get
		Set
			If (String.Equals(Me._Reference, value) = false) Then
				Me._Reference = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TerminalIdentifier", DbType:="NVarChar(50)")>  _
	Public Property TerminalIdentifier() As String
		Get
			Return Me._TerminalIdentifier
		End Get
		Set
			If (String.Equals(Me._TerminalIdentifier, value) = false) Then
				Me._TerminalIdentifier = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GrossIncome", DbType:="Money")>  _
	Public Property GrossIncome() As System.Nullable(Of Decimal)
		Get
			Return Me._GrossIncome
		End Get
		Set
			If (Me._GrossIncome.Equals(value) = false) Then
				Me._GrossIncome = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NettIncome", DbType:="Money")>  _
	Public Property NettIncome() As System.Nullable(Of Decimal)
		Get
			Return Me._NettIncome
		End Get
		Set
			If (Me._NettIncome.Equals(value) = false) Then
				Me._NettIncome = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OfferTerm", DbType:="Int")>  _
	Public Property OfferTerm() As System.Nullable(Of Integer)
		Get
			Return Me._OfferTerm
		End Get
		Set
			If (Me._OfferTerm.Equals(value) = false) Then
				Me._OfferTerm = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OfferInstallment", DbType:="Money")>  _
	Public Property OfferInstallment() As System.Nullable(Of Decimal)
		Get
			Return Me._OfferInstallment
		End Get
		Set
			If (Me._OfferInstallment.Equals(value) = false) Then
				Me._OfferInstallment = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Test", DbType:="Bit")>  _
	Public Property Test() As System.Nullable(Of Boolean)
		Get
			Return Me._Test
		End Get
		Set
			If (Me._Test.Equals(value) = false) Then
				Me._Test = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPDescription", DbType:="NVarChar(MAX)")>  _
	Public Property CPDescription() As String
		Get
			Return Me._CPDescription
		End Get
		Set
			If (String.Equals(Me._CPDescription, value) = false) Then
				Me._CPDescription = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EnvironmentRepositoryID", DbType:="BigInt")>  _
	Public Property EnvironmentRepositoryID() As System.Nullable(Of Long)
		Get
			Return Me._EnvironmentRepositoryID
		End Get
		Set
			If (Me._EnvironmentRepositoryID.Equals(value) = false) Then
				Me._EnvironmentRepositoryID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MerchantTerminalID", DbType:="BigInt")>  _
	Public Property MerchantTerminalID() As System.Nullable(Of Long)
		Get
			Return Me._MerchantTerminalID
		End Get
		Set
			If (Me._MerchantTerminalID.Equals(value) = false) Then
				Me._MerchantTerminalID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductID", DbType:="BigInt")>  _
	Public Property ProductID() As System.Nullable(Of Long)
		Get
			Return Me._ProductID
		End Get
		Set
			If (Me._ProductID.Equals(value) = false) Then
				Me._ProductID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TerminalTypeID", DbType:="BigInt")>  _
	Public Property TerminalTypeID() As System.Nullable(Of Long)
		Get
			Return Me._TerminalTypeID
		End Get
		Set
			If (Me._TerminalTypeID.Equals(value) = false) Then
				Me._TerminalTypeID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rate", DbType:="Float")>  _
	Public Property Rate() As System.Nullable(Of Double)
		Get
			Return Me._Rate
		End Get
		Set
			If (Me._Rate.Equals(value) = false) Then
				Me._Rate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChannelID", DbType:="BigInt")>  _
	Public Property ChannelID() As System.Nullable(Of Long)
		Get
			Return Me._ChannelID
		End Get
		Set
			If (Me._ChannelID.Equals(value) = false) Then
				Me._ChannelID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InternalStatus", DbType:="NVarChar(500)")>  _
	Public Property InternalStatus() As String
		Get
			Return Me._InternalStatus
		End Get
		Set
			If (String.Equals(Me._InternalStatus, value) = false) Then
				Me._InternalStatus = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateCreated", DbType:="DateTime")>  _
	Public Property DateCreated() As System.Nullable(Of Date)
		Get
			Return Me._DateCreated
		End Get
		Set
			If (Me._DateCreated.Equals(value) = false) Then
				Me._DateCreated = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateAuthorised", DbType:="DateTime")>  _
	Public Property DateAuthorised() As System.Nullable(Of Date)
		Get
			Return Me._DateAuthorised
		End Get
		Set
			If (Me._DateAuthorised.Equals(value) = false) Then
				Me._DateAuthorised = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateBankChecked", DbType:="DateTime")>  _
	Public Property DateBankChecked() As System.Nullable(Of Date)
		Get
			Return Me._DateBankChecked
		End Get
		Set
			If (Me._DateBankChecked.Equals(value) = false) Then
				Me._DateBankChecked = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateCaptured", DbType:="DateTime")>  _
	Public Property DateCaptured() As System.Nullable(Of Date)
		Get
			Return Me._DateCaptured
		End Get
		Set
			If (Me._DateCaptured.Equals(value) = false) Then
				Me._DateCaptured = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateMarketing", DbType:="DateTime")>  _
	Public Property DateMarketing() As System.Nullable(Of Date)
		Get
			Return Me._DateMarketing
		End Get
		Set
			If (Me._DateMarketing.Equals(value) = false) Then
				Me._DateMarketing = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateTerms", DbType:="DateTime")>  _
	Public Property DateTerms() As System.Nullable(Of Date)
		Get
			Return Me._DateTerms
		End Get
		Set
			If (Me._DateTerms.Equals(value) = false) Then
				Me._DateTerms = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateFirstSentToBank", DbType:="DateTime")>  _
	Public Property DateFirstSentToBank() As System.Nullable(Of Date)
		Get
			Return Me._DateFirstSentToBank
		End Get
		Set
			If (Me._DateFirstSentToBank.Equals(value) = false) Then
				Me._DateFirstSentToBank = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateSentToBank", DbType:="DateTime")>  _
	Public Property DateSentToBank() As System.Nullable(Of Date)
		Get
			Return Me._DateSentToBank
		End Get
		Set
			If (Me._DateSentToBank.Equals(value) = false) Then
				Me._DateSentToBank = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateFirstOfferMade", DbType:="DateTime")>  _
	Public Property DateFirstOfferMade() As System.Nullable(Of Date)
		Get
			Return Me._DateFirstOfferMade
		End Get
		Set
			If (Me._DateFirstOfferMade.Equals(value) = false) Then
				Me._DateFirstOfferMade = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateOfferMade", DbType:="DateTime")>  _
	Public Property DateOfferMade() As System.Nullable(Of Date)
		Get
			Return Me._DateOfferMade
		End Get
		Set
			If (Me._DateOfferMade.Equals(value) = false) Then
				Me._DateOfferMade = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateFirstOfferAccepted", DbType:="DateTime")>  _
	Public Property DateFirstOfferAccepted() As System.Nullable(Of Date)
		Get
			Return Me._DateFirstOfferAccepted
		End Get
		Set
			If (Me._DateFirstOfferAccepted.Equals(value) = false) Then
				Me._DateFirstOfferAccepted = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateOfferAccepted", DbType:="DateTime")>  _
	Public Property DateOfferAccepted() As System.Nullable(Of Date)
		Get
			Return Me._DateOfferAccepted
		End Get
		Set
			If (Me._DateOfferAccepted.Equals(value) = false) Then
				Me._DateOfferAccepted = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateFirstOfferRejected", DbType:="DateTime")>  _
	Public Property DateFirstOfferRejected() As System.Nullable(Of Date)
		Get
			Return Me._DateFirstOfferRejected
		End Get
		Set
			If (Me._DateFirstOfferRejected.Equals(value) = false) Then
				Me._DateFirstOfferRejected = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateOfferRejected", DbType:="DateTime")>  _
	Public Property DateOfferRejected() As System.Nullable(Of Date)
		Get
			Return Me._DateOfferRejected
		End Get
		Set
			If (Me._DateOfferRejected.Equals(value) = false) Then
				Me._DateOfferRejected = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateFirstDeclined", DbType:="DateTime")>  _
	Public Property DateFirstDeclined() As System.Nullable(Of Date)
		Get
			Return Me._DateFirstDeclined
		End Get
		Set
			If (Me._DateFirstDeclined.Equals(value) = false) Then
				Me._DateFirstDeclined = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateDeclined", DbType:="DateTime")>  _
	Public Property DateDeclined() As System.Nullable(Of Date)
		Get
			Return Me._DateDeclined
		End Get
		Set
			If (Me._DateDeclined.Equals(value) = false) Then
				Me._DateDeclined = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateApproved", DbType:="DateTime")>  _
	Public Property DateApproved() As System.Nullable(Of Date)
		Get
			Return Me._DateApproved
		End Get
		Set
			If (Me._DateApproved.Equals(value) = false) Then
				Me._DateApproved = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateAccepted", DbType:="DateTime")>  _
	Public Property DateAccepted() As System.Nullable(Of Date)
		Get
			Return Me._DateAccepted
		End Get
		Set
			If (Me._DateAccepted.Equals(value) = false) Then
				Me._DateAccepted = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateDOMandate", DbType:="DateTime")>  _
	Public Property DateDOMandate() As System.Nullable(Of Date)
		Get
			Return Me._DateDOMandate
		End Get
		Set
			If (Me._DateDOMandate.Equals(value) = false) Then
				Me._DateDOMandate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateContracted", DbType:="DateTime")>  _
	Public Property DateContracted() As System.Nullable(Of Date)
		Get
			Return Me._DateContracted
		End Get
		Set
			If (Me._DateContracted.Equals(value) = false) Then
				Me._DateContracted = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateCollected", DbType:="DateTime")>  _
	Public Property DateCollected() As System.Nullable(Of Date)
		Get
			Return Me._DateCollected
		End Get
		Set
			If (Me._DateCollected.Equals(value) = false) Then
				Me._DateCollected = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DatePaymentUploaded", DbType:="DateTime")>  _
	Public Property DatePaymentUploaded() As System.Nullable(Of Date)
		Get
			Return Me._DatePaymentUploaded
		End Get
		Set
			If (Me._DatePaymentUploaded.Equals(value) = false) Then
				Me._DatePaymentUploaded = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DatePaymentVerified", DbType:="DateTime")>  _
	Public Property DatePaymentVerified() As System.Nullable(Of Date)
		Get
			Return Me._DatePaymentVerified
		End Get
		Set
			If (Me._DatePaymentVerified.Equals(value) = false) Then
				Me._DatePaymentVerified = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DatePaymentReceived", DbType:="DateTime")>  _
	Public Property DatePaymentReceived() As System.Nullable(Of Date)
		Get
			Return Me._DatePaymentReceived
		End Get
		Set
			If (Me._DatePaymentReceived.Equals(value) = false) Then
				Me._DatePaymentReceived = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateDisbursed", DbType:="DateTime")>  _
	Public Property DateDisbursed() As System.Nullable(Of Date)
		Get
			Return Me._DateDisbursed
		End Get
		Set
			If (Me._DateDisbursed.Equals(value) = false) Then
				Me._DateDisbursed = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateCancelled", DbType:="DateTime")>  _
	Public Property DateCancelled() As System.Nullable(Of Date)
		Get
			Return Me._DateCancelled
		End Get
		Set
			If (Me._DateCancelled.Equals(value) = false) Then
				Me._DateCancelled = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateExpired", DbType:="DateTime")>  _
	Public Property DateExpired() As System.Nullable(Of Date)
		Get
			Return Me._DateExpired
		End Get
		Set
			If (Me._DateExpired.Equals(value) = false) Then
				Me._DateExpired = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateCompleted", DbType:="DateTime")>  _
	Public Property DateCompleted() As System.Nullable(Of Date)
		Get
			Return Me._DateCompleted
		End Get
		Set
			If (Me._DateCompleted.Equals(value) = false) Then
				Me._DateCompleted = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Authorised", DbType:="Bit")>  _
	Public Property Authorised() As System.Nullable(Of Boolean)
		Get
			Return Me._Authorised
		End Get
		Set
			If (Me._Authorised.Equals(value) = false) Then
				Me._Authorised = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BankChecked", DbType:="Int")>  _
	Public Property BankChecked() As System.Nullable(Of Integer)
		Get
			Return Me._BankChecked
		End Get
		Set
			If (Me._BankChecked.Equals(value) = false) Then
				Me._BankChecked = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Captured", DbType:="Bit")>  _
	Public Property Captured() As System.Nullable(Of Boolean)
		Get
			Return Me._Captured
		End Get
		Set
			If (Me._Captured.Equals(value) = false) Then
				Me._Captured = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Marketing", DbType:="Bit")>  _
	Public Property Marketing() As System.Nullable(Of Boolean)
		Get
			Return Me._Marketing
		End Get
		Set
			If (Me._Marketing.Equals(value) = false) Then
				Me._Marketing = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Terms", DbType:="Bit")>  _
	Public Property Terms() As System.Nullable(Of Boolean)
		Get
			Return Me._Terms
		End Get
		Set
			If (Me._Terms.Equals(value) = false) Then
				Me._Terms = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SentToBank", DbType:="Int")>  _
	Public Property SentToBank() As System.Nullable(Of Integer)
		Get
			Return Me._SentToBank
		End Get
		Set
			If (Me._SentToBank.Equals(value) = false) Then
				Me._SentToBank = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OfferMade", DbType:="Int")>  _
	Public Property OfferMade() As System.Nullable(Of Integer)
		Get
			Return Me._OfferMade
		End Get
		Set
			If (Me._OfferMade.Equals(value) = false) Then
				Me._OfferMade = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OfferAccepted", DbType:="Int")>  _
	Public Property OfferAccepted() As System.Nullable(Of Integer)
		Get
			Return Me._OfferAccepted
		End Get
		Set
			If (Me._OfferAccepted.Equals(value) = false) Then
				Me._OfferAccepted = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OfferRejected", DbType:="Int")>  _
	Public Property OfferRejected() As System.Nullable(Of Integer)
		Get
			Return Me._OfferRejected
		End Get
		Set
			If (Me._OfferRejected.Equals(value) = false) Then
				Me._OfferRejected = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Declined", DbType:="Int")>  _
	Public Property Declined() As System.Nullable(Of Integer)
		Get
			Return Me._Declined
		End Get
		Set
			If (Me._Declined.Equals(value) = false) Then
				Me._Declined = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pending", DbType:="Bit")>  _
	Public Property Pending() As System.Nullable(Of Boolean)
		Get
			Return Me._Pending
		End Get
		Set
			If (Me._Pending.Equals(value) = false) Then
				Me._Pending = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Approved", DbType:="Bit")>  _
	Public Property Approved() As System.Nullable(Of Boolean)
		Get
			Return Me._Approved
		End Get
		Set
			If (Me._Approved.Equals(value) = false) Then
				Me._Approved = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Accepted", DbType:="Bit")>  _
	Public Property Accepted() As System.Nullable(Of Boolean)
		Get
			Return Me._Accepted
		End Get
		Set
			If (Me._Accepted.Equals(value) = false) Then
				Me._Accepted = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOMandate", DbType:="Bit")>  _
	Public Property DOMandate() As System.Nullable(Of Boolean)
		Get
			Return Me._DOMandate
		End Get
		Set
			If (Me._DOMandate.Equals(value) = false) Then
				Me._DOMandate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Contracted", DbType:="Bit")>  _
	Public Property Contracted() As System.Nullable(Of Boolean)
		Get
			Return Me._Contracted
		End Get
		Set
			If (Me._Contracted.Equals(value) = false) Then
				Me._Contracted = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Collected", DbType:="Bit")>  _
	Public Property Collected() As System.Nullable(Of Boolean)
		Get
			Return Me._Collected
		End Get
		Set
			If (Me._Collected.Equals(value) = false) Then
				Me._Collected = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentUploaded", DbType:="Bit")>  _
	Public Property PaymentUploaded() As System.Nullable(Of Boolean)
		Get
			Return Me._PaymentUploaded
		End Get
		Set
			If (Me._PaymentUploaded.Equals(value) = false) Then
				Me._PaymentUploaded = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentVerified", DbType:="Bit")>  _
	Public Property PaymentVerified() As System.Nullable(Of Boolean)
		Get
			Return Me._PaymentVerified
		End Get
		Set
			If (Me._PaymentVerified.Equals(value) = false) Then
				Me._PaymentVerified = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentReceived", DbType:="Bit")>  _
	Public Property PaymentReceived() As System.Nullable(Of Boolean)
		Get
			Return Me._PaymentReceived
		End Get
		Set
			If (Me._PaymentReceived.Equals(value) = false) Then
				Me._PaymentReceived = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Disbursed", DbType:="Bit")>  _
	Public Property Disbursed() As System.Nullable(Of Boolean)
		Get
			Return Me._Disbursed
		End Get
		Set
			If (Me._Disbursed.Equals(value) = false) Then
				Me._Disbursed = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateLastUpdated", DbType:="DateTime")>  _
	Public Property DateLastUpdated() As System.Nullable(Of Date)
		Get
			Return Me._DateLastUpdated
		End Get
		Set
			If (Me._DateLastUpdated.Equals(value) = false) Then
				Me._DateLastUpdated = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Completed", DbType:="Bit")>  _
	Public Property Completed() As System.Nullable(Of Boolean)
		Get
			Return Me._Completed
		End Get
		Set
			If (Me._Completed.Equals(value) = false) Then
				Me._Completed = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Expired", DbType:="Bit")>  _
	Public Property Expired() As System.Nullable(Of Boolean)
		Get
			Return Me._Expired
		End Get
		Set
			If (Me._Expired.Equals(value) = false) Then
				Me._Expired = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cancelled", DbType:="Bit")>  _
	Public Property Cancelled() As System.Nullable(Of Boolean)
		Get
			Return Me._Cancelled
		End Get
		Set
			If (Me._Cancelled.Equals(value) = false) Then
				Me._Cancelled = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreditCheckResult", DbType:="NVarChar(MAX)")>  _
	Public Property CreditCheckResult() As String
		Get
			Return Me._CreditCheckResult
		End Get
		Set
			If (String.Equals(Me._CreditCheckResult, value) = false) Then
				Me._CreditCheckResult = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateCreditCheck", DbType:="DateTime")>  _
	Public Property DateCreditCheck() As System.Nullable(Of Date)
		Get
			Return Me._DateCreditCheck
		End Get
		Set
			If (Me._DateCreditCheck.Equals(value) = false) Then
				Me._DateCreditCheck = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateRejected", DbType:="DateTime")>  _
	Public Property DateRejected() As System.Nullable(Of Date)
		Get
			Return Me._DateRejected
		End Get
		Set
			If (Me._DateRejected.Equals(value) = false) Then
				Me._DateRejected = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreditCheck", DbType:="Bit")>  _
	Public Property CreditCheck() As System.Nullable(Of Boolean)
		Get
			Return Me._CreditCheck
		End Get
		Set
			If (Me._CreditCheck.Equals(value) = false) Then
				Me._CreditCheck = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rejected", DbType:="Bit")>  _
	Public Property Rejected() As System.Nullable(Of Boolean)
		Get
			Return Me._Rejected
		End Get
		Set
			If (Me._Rejected.Equals(value) = false) Then
				Me._Rejected = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vHistory")>  _
Partial Public Class vHistory
	
	Private _ApplicationID As System.Nullable(Of Long)
	
	Private _ID As Long
	
	Private _AuditDate As System.Nullable(Of Date)
	
	Private _Name As String
	
	Private _Details As String
	
	Private _Type As String
	
	Private _IPAddress As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApplicationID", DbType:="BigInt")>  _
	Public Property ApplicationID() As System.Nullable(Of Long)
		Get
			Return Me._ApplicationID
		End Get
		Set
			If (Me._ApplicationID.Equals(value) = false) Then
				Me._ApplicationID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="BigInt NOT NULL")>  _
	Public Property ID() As Long
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AuditDate", DbType:="DateTime")>  _
	Public Property AuditDate() As System.Nullable(Of Date)
		Get
			Return Me._AuditDate
		End Get
		Set
			If (Me._AuditDate.Equals(value) = false) Then
				Me._AuditDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(500)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Details", DbType:="NVarChar(MAX)")>  _
	Public Property Details() As String
		Get
			Return Me._Details
		End Get
		Set
			If (String.Equals(Me._Details, value) = false) Then
				Me._Details = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type", DbType:="NVarChar(500)")>  _
	Public Property Type() As String
		Get
			Return Me._Type
		End Get
		Set
			If (String.Equals(Me._Type, value) = false) Then
				Me._Type = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IPAddress", DbType:="NVarChar(50)")>  _
	Public Property IPAddress() As String
		Get
			Return Me._IPAddress
		End Get
		Set
			If (String.Equals(Me._IPAddress, value) = false) Then
				Me._IPAddress = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vPaymentRequest")>  _
Partial Public Class vPaymentRequest
	
	Private _ID As Long
	
	Private _MerchantName As String
	
	Private _CustomerName As String
	
	Private _IDNumber As String
	
	Private _MerchantID As System.Nullable(Of Long)
	
	Private _CurrDate As String
	
	Private _OfferAmount As String
	
	Private _Industry As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="BigInt NOT NULL")>  _
	Public Property ID() As Long
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MerchantName", DbType:="NVarChar(500) NOT NULL", CanBeNull:=false)>  _
	Public Property MerchantName() As String
		Get
			Return Me._MerchantName
		End Get
		Set
			If (String.Equals(Me._MerchantName, value) = false) Then
				Me._MerchantName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerName", DbType:="NVarChar(1001)")>  _
	Public Property CustomerName() As String
		Get
			Return Me._CustomerName
		End Get
		Set
			If (String.Equals(Me._CustomerName, value) = false) Then
				Me._CustomerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDNumber", DbType:="NVarChar(50)")>  _
	Public Property IDNumber() As String
		Get
			Return Me._IDNumber
		End Get
		Set
			If (String.Equals(Me._IDNumber, value) = false) Then
				Me._IDNumber = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MerchantID", DbType:="BigInt")>  _
	Public Property MerchantID() As System.Nullable(Of Long)
		Get
			Return Me._MerchantID
		End Get
		Set
			If (Me._MerchantID.Equals(value) = false) Then
				Me._MerchantID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CurrDate", DbType:="NVarChar(4000)")>  _
	Public Property CurrDate() As String
		Get
			Return Me._CurrDate
		End Get
		Set
			If (String.Equals(Me._CurrDate, value) = false) Then
				Me._CurrDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OfferAmount", DbType:="VarChar(14)")>  _
	Public Property OfferAmount() As String
		Get
			Return Me._OfferAmount
		End Get
		Set
			If (String.Equals(Me._OfferAmount, value) = false) Then
				Me._OfferAmount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Industry", DbType:="NVarChar(500)")>  _
	Public Property Industry() As String
		Get
			Return Me._Industry
		End Get
		Set
			If (String.Equals(Me._Industry, value) = false) Then
				Me._Industry = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XDSPreVet")>  _
Partial Public Class XDSPreVet
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _ApplicationID As String
	
	Private _Pass As String
	
	Private _Score As String
	
	Private _Description As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnApplicationIDChanging(value As String)
    End Sub
    Partial Private Sub OnApplicationIDChanged()
    End Sub
    Partial Private Sub OnPassChanging(value As String)
    End Sub
    Partial Private Sub OnPassChanged()
    End Sub
    Partial Private Sub OnScoreChanging(value As String)
    End Sub
    Partial Private Sub OnScoreChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApplicationID", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property ApplicationID() As String
		Get
			Return Me._ApplicationID
		End Get
		Set
			If (String.Equals(Me._ApplicationID, value) = false) Then
				Me.OnApplicationIDChanging(value)
				Me.SendPropertyChanging
				Me._ApplicationID = value
				Me.SendPropertyChanged("ApplicationID")
				Me.OnApplicationIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pass", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Pass() As String
		Get
			Return Me._Pass
		End Get
		Set
			If (String.Equals(Me._Pass, value) = false) Then
				Me.OnPassChanging(value)
				Me.SendPropertyChanging
				Me._Pass = value
				Me.SendPropertyChanged("Pass")
				Me.OnPassChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Score", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Score() As String
		Get
			Return Me._Score
		End Get
		Set
			If (String.Equals(Me._Score, value) = false) Then
				Me.OnScoreChanging(value)
				Me.SendPropertyChanging
				Me._Score = value
				Me.SendPropertyChanged("Score")
				Me.OnScoreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(MAX)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

Partial Public Class CheckDealResult
	
	Private _Captured As System.Nullable(Of Integer)
	
	Private _ProvOfferAccepted As System.Nullable(Of Integer)
	
	Private _BankCheck As System.Nullable(Of Integer)
	
	Private _Marketing As System.Nullable(Of Integer)
	
	Private _Terms As System.Nullable(Of Integer)
	
	Private _Accepted As System.Nullable(Of Integer)
	
	Private _DOMandate As System.Nullable(Of Integer)
	
	Private _Contracted As System.Nullable(Of Integer)
	
	Private _Collected As System.Nullable(Of Integer)
	
	Private _POP As System.Nullable(Of Integer)
	
	Private _POPVerified As System.Nullable(Of Integer)
	
	Private _PaymentReceived As System.Nullable(Of Integer)
	
	Private _Disbursed As System.Nullable(Of Integer)
	
	Private _Completed As System.Nullable(Of Integer)
	
	Private _Declined As System.Nullable(Of Integer)
	
	Private _Cancelled As System.Nullable(Of Integer)
	
	Private _Expired As System.Nullable(Of Integer)
	
	Private _Test As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Captured", DbType:="Int")>  _
	Public Property Captured() As System.Nullable(Of Integer)
		Get
			Return Me._Captured
		End Get
		Set
			If (Me._Captured.Equals(value) = false) Then
				Me._Captured = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProvOfferAccepted", DbType:="Int")>  _
	Public Property ProvOfferAccepted() As System.Nullable(Of Integer)
		Get
			Return Me._ProvOfferAccepted
		End Get
		Set
			If (Me._ProvOfferAccepted.Equals(value) = false) Then
				Me._ProvOfferAccepted = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BankCheck", DbType:="Int")>  _
	Public Property BankCheck() As System.Nullable(Of Integer)
		Get
			Return Me._BankCheck
		End Get
		Set
			If (Me._BankCheck.Equals(value) = false) Then
				Me._BankCheck = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Marketing", DbType:="Int")>  _
	Public Property Marketing() As System.Nullable(Of Integer)
		Get
			Return Me._Marketing
		End Get
		Set
			If (Me._Marketing.Equals(value) = false) Then
				Me._Marketing = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Terms", DbType:="Int")>  _
	Public Property Terms() As System.Nullable(Of Integer)
		Get
			Return Me._Terms
		End Get
		Set
			If (Me._Terms.Equals(value) = false) Then
				Me._Terms = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Accepted", DbType:="Int")>  _
	Public Property Accepted() As System.Nullable(Of Integer)
		Get
			Return Me._Accepted
		End Get
		Set
			If (Me._Accepted.Equals(value) = false) Then
				Me._Accepted = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOMandate", DbType:="Int")>  _
	Public Property DOMandate() As System.Nullable(Of Integer)
		Get
			Return Me._DOMandate
		End Get
		Set
			If (Me._DOMandate.Equals(value) = false) Then
				Me._DOMandate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Contracted", DbType:="Int")>  _
	Public Property Contracted() As System.Nullable(Of Integer)
		Get
			Return Me._Contracted
		End Get
		Set
			If (Me._Contracted.Equals(value) = false) Then
				Me._Contracted = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Collected", DbType:="Int")>  _
	Public Property Collected() As System.Nullable(Of Integer)
		Get
			Return Me._Collected
		End Get
		Set
			If (Me._Collected.Equals(value) = false) Then
				Me._Collected = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POP", DbType:="Int")>  _
	Public Property POP() As System.Nullable(Of Integer)
		Get
			Return Me._POP
		End Get
		Set
			If (Me._POP.Equals(value) = false) Then
				Me._POP = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POPVerified", DbType:="Int")>  _
	Public Property POPVerified() As System.Nullable(Of Integer)
		Get
			Return Me._POPVerified
		End Get
		Set
			If (Me._POPVerified.Equals(value) = false) Then
				Me._POPVerified = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentReceived", DbType:="Int")>  _
	Public Property PaymentReceived() As System.Nullable(Of Integer)
		Get
			Return Me._PaymentReceived
		End Get
		Set
			If (Me._PaymentReceived.Equals(value) = false) Then
				Me._PaymentReceived = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Disbursed", DbType:="Int")>  _
	Public Property Disbursed() As System.Nullable(Of Integer)
		Get
			Return Me._Disbursed
		End Get
		Set
			If (Me._Disbursed.Equals(value) = false) Then
				Me._Disbursed = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Completed", DbType:="Int")>  _
	Public Property Completed() As System.Nullable(Of Integer)
		Get
			Return Me._Completed
		End Get
		Set
			If (Me._Completed.Equals(value) = false) Then
				Me._Completed = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Declined", DbType:="Int")>  _
	Public Property Declined() As System.Nullable(Of Integer)
		Get
			Return Me._Declined
		End Get
		Set
			If (Me._Declined.Equals(value) = false) Then
				Me._Declined = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cancelled", DbType:="Int")>  _
	Public Property Cancelled() As System.Nullable(Of Integer)
		Get
			Return Me._Cancelled
		End Get
		Set
			If (Me._Cancelled.Equals(value) = false) Then
				Me._Cancelled = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Expired", DbType:="Int")>  _
	Public Property Expired() As System.Nullable(Of Integer)
		Get
			Return Me._Expired
		End Get
		Set
			If (Me._Expired.Equals(value) = false) Then
				Me._Expired = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Test", DbType:="Bit")>  _
	Public Property Test() As System.Nullable(Of Boolean)
		Get
			Return Me._Test
		End Get
		Set
			If (Me._Test.Equals(value) = false) Then
				Me._Test = value
			End If
		End Set
	End Property
End Class
